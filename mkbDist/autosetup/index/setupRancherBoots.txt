//! @mkb-import-begin
    // info/index/_matchExpressionNBT
        // Used by getItemName, getItemUUID, getItemSBID to extract a regular expression capture group from NBT Data.
            // Params:
            //      {string} <&haystack>    The string to extract the first capture group from.
            //      {string} <&expression>  The expression to test against <&haystack>, must have at least one capture group.
            //
            // Returns the first capture group's content from the <&expression> match, or an empty string if no match is found.
        function _matchExpressionNBT(&haystack,&expr);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:34
            &return_string = "";
            ifmatches(%&haystack%,%&expr%,&capture_group,1);
                &return_string = %&capture_group%;
            endif;
            return(%&return_string%);
        endfunction;
    // info/index/getItemSBID
        // Given the NBT Data of an Item, extracts the Item's SBID from the NBT Data.
            // Params:
            //      {string} <&nbt> The NBT Data to extract the Item SBID from.
            //
            // Returns the Item's SBID, or an empty string if one is not found.
        function getItemSBID(&nbt);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:103
            &nbt           = strip(%&nbt%);
            &return_string = _matchExpressionNBT(%&nbt%,"\bid\"?\s*:\"([A-Z_0-9:]+)\"");
            return(%&return_string%);
        endfunction;
    // info/index/getItemName
        // Given the NBT Data of an Item (and optionally it's base item), extracts the Display Name of the Item from the NBT Data.
            // Params:
            //      {string} <&nbt>         The NBT Data to extract the Name from.
            //      {string} [&item="air"]  The Item this NBT Data was collected from (only used in cases where the Item's Name cannot be found).
            //      {boolean} [strip=true]  Whether or not to strip formatting codes from the extracted Name.
            //
            // Returns the Display Name of the Item found from it's NBT Data, with formatting codes stripped if [strip] is true.
        function getItemName(&nbt,&item="air",strip=true);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:49
            ifmatches(%&nbt%,".*\bName\s*:\"\s*(.*?)\"",&found_name,1);
                if(%strip%);
                    &found_name = strip(%&found_name%);
                endif;
            elseif(%&item% == "air");
                &found_name = "Air";
            endif;
            return(%&found_name%);
        endfunction;
    // autosetup/index/setupRancherBoots
        // Finds Rancher Boots in the Inventory, then if they are set to the wrong speed,
        // edits them to the correct speed, then equips them.
            // Params:
                // {number} [#desired_speed=200]    The desired speed the Boots should be set to.
                //
            // Returns a boolean indicating whether or not there are a pair of Rancher Boots
            // equipped with the desired speed setup appropriately.
        function setupRancherBoots(#desired_speed=200);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/autosetup/index.txt:302
            // Check if we have Rancher's Boots in our Inventory or on our Mouse.
            if(true);
                #inventory_start = 8;
                #inventory_end   = 44;
                #r_start         = %#inventory_start%;
                #r_end           = %#inventory_end%;
                #f_offset        = %#inventory_start%;
                &r_item          = "leather_boots";  // optional, include to use getslot and to use additional filtering parameters
                &r_sbid          = "RANCHERS_BOOTS"; // optional, include to use additional filtering parameters
                for(#r_slot,%#r_start%,%#r_end%);
                    if(%&r_item% != "");
                        getslotinv(%&r_item%,#f_slot,%#f_offset%);
                    else;
                        #f_slot = %#r_slot%;
                    endif;
                    
                    if((%#f_slot% >= %#r_start%) && (%#f_slot% <= %#r_end%));
                        &f_item = getslotiteminv(%#f_slot%,,#f_stack,#f_data,&f_nbt);
                        &f_nbt  = strip(%&f_nbt%);
                        &f_name = getItemName(%&f_nbt%,%&f_item%);
                        &f_sbid = getItemSBID(%&f_nbt%);
                        f_match = (((!%&r_item%) || (%&r_item% == %&f_item%)) && ((!%&r_name%) || (%&r_name% == %&f_name%)) && ((!%&r_sbid%) || (%&r_sbid% == %&f_sbid%)));
                        if(%f_match%);
                            
                        else;
                            #f_offset = %#f_slot% + 1;
                        endif;
                    else;
                        break;
                    endif;
                next;
            endif;
        endfunction;
//! @mkb-import-end