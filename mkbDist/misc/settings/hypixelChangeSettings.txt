//! @mkb-import-begin
    // gui/index/localGUI
        // Changes the current GUI to a local GUI.
            // Params:
            //      {string} [&target_gui="NONE"]         - The Target GUI to switch to. Can be any of the following strings:
            //                                              "NONE", "GUIINVENTORY", "GUICHAT".
            //      {number} [#wait_ticks=@#def_wait_ticks]- Amount of ticks (1t = 50ms) to wait between each action (press/GUI).
            //
            // Returns a boolean indicating whether or not GUI == <&target_gui> at end of function.
        function localGUI(&target_gui="NONE",#wait_ticks=20);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/gui/index.txt:11
            &valid_guis[] = split(", ","NONE, GUIINVENTORY, GUICHAT");
            #valid_gui    = indexof(&valid_guis[],,%&target_gui%);
            if(#valid_gui == -1);
                #valid_gui = 0;
            endif;
            &target_gui = ucase(%&valid_guis[%#valid_gui%]%);
            
            do;
                if(%GUI% == %&target_gui%);
                    break;
                elseif(%GUI% != "NONE");
                    press("escape");
                    do(%#wait_ticks%);
                        wait("1t");
                    until(%GUI% == "NONE");
                else;
                    if(%&target_gui% == "GUIINVENTORY");
                        gui("inventory");
                    elseif(%&target_gui% == "GUICHAT");
                        gui("chat");
                    endif;
                    
                    do(%#wait_ticks%);
                        wait("1t");
                    until(%GUI% != "NONE");
                endif;
            until(%GUI% == %&target_gui%);
            return_boolean = %GUI% == %&target_gui%;
            return(%return_boolean%);
        endfunction;
    // gui/index/decodeContainerString
        // Decodes a Container String into an Array of it's components.
            // Params:
            //      {string} <&container_string>    A container string generated by getContainerString
            //
            // Returns an Array:
            //  0 {string} &container_gui   The string value of "%GUI%" from the Container String
            //  1 {string} &container_name  The string value of "%CONTAINERNAME%" from the Container String
            //  2 {number} #container_slots The number value of "%CONTAINERSLOTS%" from the Container String
            //
            // If the Container String holds NBT Item Data, elements 3, ... are the ENCODED NBT strings.
            //
        function decodeContainerString(&container_string);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/gui/index.txt:358
            &decoded_string = decode(%&container_string%);
            &decoded_vars[] = split("$",%&decoded_string%);
            #decoded_length = arraysize(&decoded_vars[]);
            
            &decoded_data[] = split("|",%&decoded_vars[0]%);
            if(%#decoded_length% > 1);
                &encoded_nbt[] = split("~",%&decoded_vars[1]%);
                push(&decoded_data[],&encoded_nbt[*]);
            endif;
            return(&decoded_data[]);
        endfunction;
    // gui/index/getContainerString
        // Encodes the current values of GUI, CONTAINERNAME, CONTAINERSLOTS, and optionally Slot Data from each slot in the Container
        // into a string using encode(). Used to check if the GUI has updated.
            // Params:
            //      {boolean} [include_items=false] If true, will call indexGUI and append it's data to the Container String.
            //
            // Returns a string encoded with encode() in format 'GUI|CONTAINERNAME|CONTAINERSLOTS[$<slot_nbt>~<slot_nbt>~<...>]'.
            // The [$<slot_nbt>~<slot_nbt>~<...>] portion is only included if [include_items] is true.
        function getContainerString(include_items=false);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/gui/index.txt:274
            &env_var_str = "%GUI%|%CONTAINERNAME%|%CONTAINERSLOTS%";
            if(%include_items%);
                if(%CONTAINERSLOTS% > 0);
                    #container_start = 0;
                    #container_end   = %CONTAINERSLOTS% - 37;
                    #inventory_start = %CONTAINERSLOTS% - 36;
                    #inventory_end   = %CONTAINERSLOTS% - 1;
                    #range_start     = %#container_start%;
                    #range_end       = %#inventory_end%;
                    for(#slot,%#range_start%,%#range_end%);
                        &f_item     = getslotitemnbt(%#slot%,,#f_stack,#f_data,&f_nbt);
                        &f_nbt      = strip(%&f_nbt%);
                        &f_nbt      = encode(%&f_nbt%);
                        &out_data[] = "%&f_item%|%#f_stack%|%#f_data%|%&f_nbt%";
                    next;
                endif;
                &gui_items   = join("~",&out_data[]);
                &env_var_str = "%&env_var_str%$%&gui_items%";
            endif;
            &return_string = encode(%&env_var_str%);
            return(%&return_string%);
        endfunction;
    // gui/index/enteredNewGUI
        // Checks if we are in a new GUI by comparing the <&init_container_string> to the current Container String returned by getContainerString.
            // Params:
            //      {string} <&init_container_string>   A Container String generated when we were on the Initial GUI that we want to check for an Update from.
            //      {boolean} [include_items=false]     Set this to true if [include_items] was used on the Initial call to getContainerString.
            //
            // Returns a boolean indicating whether or not the GUI has changed.
        function enteredNewGUI(&init_container_string,include_items=false,allow_mouse_full=false);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/gui/index.txt:304
            &mouse_item = getmouseitem(,#mouse_stack,#mouse_data,&mouse_nbt);
            if((%&mouse_item% != "air") && (!%allow_mouse_full%));
                return(False);
            endif;
            
            &mouse_nbt             = strip(%&mouse_nbt%);
            &mouse_nbt             = encode(%&mouse_nbt%);
            &curr_container_string = getContainerString(%include_items%);
            if(&curr_container_string != &init_container_string);
                if(%include_items%);
                    &init_data[] = call("decodeContainerString",%&init_container_string%);
                    &curr_data[] = call("decodeContainerString",%&curr_container_string%);
                    foreach(&init_data[],&init_data,#dei);
                        &curr_data = %&curr_data[%#dei%]%;
                        if(%&curr_data% != %&init_data%);
                            if(%#dei% <= 2);
                                return_boolean = True;
                                break;
                            else;
                                &init_data_arr[] = split("|",%&init_data%);
                                &init_data_item  = %&init_data_arr[0]%;
                                &init_data_nbt   = %&init_data_arr[3]%;
                                &curr_data_arr[] = split("|",%&curr_data%);
                                &curr_data_item  = %&curr_data_arr[0]%;
                                &curr_data_nbt   = %&curr_data_arr[3]%;
                                mouse_match      = (((%&init_data_item% == "air") && (%&mouse_nbt% == %&curr_data_nbt%)) || ((%&curr_data_item% == "air") && (%&mouse_nbt% == %&init_data_nbt%)));
                                
                                if(!%mouse_match%);
                                    return_boolean = True;
                                    break;
                                endif;
                            endif;
                        endif;
                    next;
                    return(%return_boolean%);
                endif;
                
                return(True);
            endif;
            return(False);
        endfunction;
    // info/index/_matchExpressionNBT
        // Used by getItemName, getItemUUID, getItemSBID to extract a regular expression capture group from NBT Data.
            // Params:
            //      {string} <&haystack>    The string to extract the first capture group from.
            //      {string} <&expression>  The expression to test against <&haystack>, must have at least one capture group.
            //
            // Returns the first capture group's content from the <&expression> match, or an empty string if no match is found.
        function _matchExpressionNBT(&haystack,&expr);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:34
            &return_string = "";
            ifmatches(%&haystack%,%&expr%,&capture_group,1);
                &return_string = %&capture_group%;
            endif;
            return(%&return_string%);
        endfunction;
    // info/index/getItemSBID
        // Given the NBT Data of an Item, extracts the Item's SBID from the NBT Data.
            // Params:
            //      {string} <&nbt> The NBT Data to extract the Item SBID from.
            //
            // Returns the Item's SBID, or an empty string if one is not found.
        function getItemSBID(&nbt);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:103
            &nbt           = strip(%&nbt%);
            &return_string = _matchExpressionNBT(%&nbt%,"\bid\"?\s*:\"([A-Z_0-9:]+)\"");
            return(%&return_string%);
        endfunction;
    // tablist/index/getGodPotionExpiryTimestamp
        // Reads the Tab List to find whether or not the Player has a God Potion effect enabled. If so,
        // returns the Seconds Timestamp of when that God Potion will expire. If not, returns -1.
            // Params:
            //      None
            //
            // Returns the Seconds Timestamp of when the Effect expires, or -1 if the Effect is not active.
        function getGodPotionExpiryTimestamp();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/tablist/index.txt:26
            &time_expression = "You have a God Potion active! (?:(\d+):)?(?:(\d+):)?(?:(\d+))";
            #expiry_ts       = -1;
            foreach("tablist");
                ifmatches(%CLEANLINE%,%&time_expression%);
                    match(%CLEANLINE%,%&time_expression%,{#hours,#minutes,#seconds});
                    #expiry_ts = %TIMESTAMP% + ((#days * 86400) + (#hours * 3600) + (#minutes * 60) + #seconds);
                    log("%#hours% hours, %#minutes% minutes, %#seconds% seconds")
                    break;
                endif;
            next;
            return(#expiry_ts);
        endfunction;
    // tablist/index/getCookieExpiryTimestamp
        // Reads the Tab List to find whether or not the Player has a Booster Cookie effect enabled. If so,
        // returns the Seconds Timestamp of when that Booster Cookie will expire. If not, returns -1.
            // Params:
            //      None
            //
            // Returns the Seconds Timestamp of when the Effect expires, or -1 if the Effect is not active.
        function getCookieExpiryTimestamp();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/tablist/index.txt:7
            &time_expression = "(?:(\d+)d\s*)?(?:(\d+)h\s*)?(?:(\d+)m\s*)?(?:(\d+)s)";
            #expiry_ts       = -1;
            foreach("tablist");
                ifmatches(%CLEANLINE%,"Cookie Buff\n(.+)",&cookie_buff_time,1);
                    match(%&cookie_buff_time%,%&time_expression%,{#days,#hours,#minutes,#seconds});
                    #expiry_ts = %TIMESTAMP% + ((#days * 86400) + (#hours * 3600) + (#minutes * 60) + #seconds);
                    break;
                endif;
            next;
            return(#expiry_ts);
        endfunction;
    // misc/index/miscValidate
        // Validates that <&search_term> is found in the <&array[]>, and/or if it is not found in the <&array[]>, the value of the element
        // found at [#default_idx=0] is returned. Set [#default_idx] to -1 to indicate that no default value should be used.
            // Params:
            //      {array} <&elements[]>       The Array to search for <&search_term> in.
            //      {string} <&search_term>     The Search Term to check if exists in <&elements[]>.
            //      {number} [#default_idx=0]   The Index of the Element in <&elements[]> to use as the default return value
            //                                  if <&search_term> is not found within the Array. If -1, will be taken as no default
            //                                  value should be used.
            //
            // Returns the element from the <&elements[]> Array that <&search_term> matches, or if no match was found and [#default_idx]
            // is not -1, the element at [#default_idx] in the <&elements[]> Array. If [#default_idx] is -1, an empty string is returned.
        function miscValidate(&search_term,#default_idx=0,...&elements[]);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/misc/index.txt:12
            #term_index = indexof(&elements[],,%&search_term%);
            if(%#term_index% != -1);
                &return_string = %&elements[%#term_index%]%;
            elseif(%#default_idx% != -1);
                &return_string = %&elements[%#default_idx%]%;
            endif;
            return(%&return_string%);
        endfunction;
    // tablist/index/getEffectExpiryTimestamp
        // Wrapper that dynamically calls getCookieExpiryTimestamp or getGodPotionExpiryTimestamp based on input.
            // Params:
            //      {string} [&type="COOKIE"]   The Effect Type to get the Expiry Timestamp of. One of: 'COOKIE', 'GODPOT'.
            //
            // Returns the Seconds Timestamp of when the Effect expires, or -1 if the Effect is not active.
        function getEffectExpiryTimestamp(&type="COOKIE");
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/tablist/index.txt:73
            &type      = miscValidate(%&type%,0,"COOKIE","GODPOT");
            #expiry_ts = -1;
            if(%&type% == "COOKIE");
                #expiry_ts = getCookieExpiryTimestamp();
            elseif(%&type% == "GODPOT");
                #expiry_ts = getGodPotionExpiryTimestamp();
            endif;
            return(%#expiry_ts%);
        endfunction;
    // tablist/index/isEffectEnabled
        // Wrapper that dynamically calls isCookieEnabled or isGodPotionEnabled based on input.
            // Params:
            //      {string} [&type="COOKIE"]       The Effect Type to get the Expiry Timestamp of. One of: 'COOKIE', 'GODPOT'.
            //      {number} [#expiry_offset_sec=0] An offset in seconds to apply to the real expiry timestamp used
            //                                      to report whether the effect should be considered 'active' or not.
            //                                      For example, if set to 300, if the cookie expires within 300 seconds / 5 min,
            //                                      will return false (when otherwise, it would return true.)
            //
            // Returns the Seconds Timestamp of when the Effect expires, or -1 if the Effect is not active.
        function isEffectEnabled(&type="COOKIE",#expiry_offset_sec=0);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/tablist/index.txt:93
            #effect_expiry_ts = getEffectExpiryTimestamp(%&type%);
            effect_enabled    = %TIMESTAMP% < (#effect_expiry_ts - #expiry_offset_sec);
            return(%effect_enabled%);
        endfunction;
    // debug/index/debug_log
        // Logs a message to chat if debug is enabled.
            // Params:
            //      <boolean> debug_enabled      : The debug condition (if true, will log).
            //      <string>  &script_debug_name : The prefix for the debug log
            //      <string>  &string            : The debug message to print to chat
            //
            // Returns the printed message.
            //
        function debug_log(debug_enabled=true,&script_debug_name="&8DEBUG_LOG&7",&string);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/debug/index.txt:30
            // &matcher     = "(?-i)(?<!&)(&[a-fk-r])(?=[a-z0-9_-]+)";
            // &replacement = "&$1";
            // &string      = regexreplace(&string,%&matcher%,%&replacement%);
            &out_string  = "&7%&script_debug_name%&7: %&string%";
            if(%debug_enabled%);
                log(%&out_string%);
            endif;
            return(%&out_string%);
        endfunction;
    // info/index/hasTimeExceeded
        // Used to determine whether to timeout a function.
            // Params:
                // {number} <#start_time>        The start timestamp to subtract from current timestamp
                // {number} <#timeout_sec>       The amount of seconds to check if difference between now & start is >=.
                // {number} [do_timeout=true]    If false, will always return false (used as shorthand for functions that
                //                               use this function to determine whether or not they have timed out).
            // Returns a boolean indicating whether or not <#start_timestamp> was >= <#seconds> ago.
            // Example:
                //    func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
        function hasTimeExceeded(#start_time,#timeout_sec,do_timeout=true);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:10
            #elapsed_sec   = %TIMESTAMP% - #start_time;
            return_boolean = ((%do_timeout%) && (#elapsed_sec >= #timeout_sec));
            return(%return_boolean%);
        endfunction;
    // info/index/getSkyblockAreaFromWTFMAP
        // Attempts to read the SkyBlock Area from the /wtfmap command + chatfilter.
            // Params:
            //      {number} [#timeout_sec=30]  Max amount of seconds to wait for Chat Filter to read the wtfmap output.
            //                                  Set to -1 to disable timeout.
            //      {number} [#wait_ticks=60]   Amount of ticks to wait between attempts to issue the command.
            //
            // Returns the String returned from the Command (i.e. "SkyBlock Dynamic"), or "-1" if cannot be found/timed out.
        function getSkyblockAreaFromWTFMAP(#timeout_sec=30,#wait_ticks=30);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:422
            debug              = true;
            &script_debug_name = "&3getSkyBlockAreaFromWTFMAP&7";
            
            @cannot_use_wtfmap = false;
            @&wtfmap           = "";
            #start_time        = %TIMESTAMP%;
            do_timeout         = #timeout_sec != -1;
            &return_string     = "-1";
            do;
                func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
                if(%func_timeout%);
                    break;
                endif;
                    
                debug_log(%debug%,%&script_debug_name%,"echoing '/wtfmap'...");
                echo("/wtfmap");
                do(%#wait_ticks%);
                    wait("1t");
                    got_response   = ((%@&wtfmap% != "") || (%@cannot_use_wtfmap%));
                until(%got_response%);
                if((%got_response%) && (%@&wtfmap% != ""));
                    &return_string = %@&wtfmap%;
                    break;
                endif;
            until((%got_response%) || (%func_timeout%));
            return(%&return_string%);
        endfunction;
    // info/index/getScoreboardSkyBlockArea
        // Attempts to read the Scoreboard to find the Player's AREA on Hypixel SkyBlock (i.e. 'Private Island', 'Hub', 'Bank', etc).
            // Params:
            //      None
            //
            // Returns the string found on the Scoreboard following the Gem Character, or "-1" if not able to be parsed.
        function getScoreboardSkyBlockArea();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:456
            &return_string = -1;
            foreach("teams");
                &joint_team = strip("%TEAMPREFIX%%TEAMSUFFIX%");
                &joint_team = trim(%&joint_team%);
                &joint_team = regexreplace(&joint_team,"^\s*","");
                ifmatches(%&joint_team%,"\u23E3 (.+)",&found_area,1);
                    &return_string = %&found_area%;
                endif;
            next;
            return(%&return_string%);
        endfunction;
    // info/index/getSkyBlockPlayerListInfo
        // Returns an Array of information extracted from the Hypixel SkyBlock PlayerList.
            // Params:
            //      {string} [...&extract_vars[]]   The variables to extract from the Player List. Valid values are:
            //                                      'AREA', 'SERVER', 'PROFILE', 'BANK', 'SKILLS', 'SPEED', 'STRENGTH',
            //                                      'CRIT_CHANCE', 'CRIT_DAMAGE', 'ATTACK_SPEED'. If no values are provided,
            //                                      will return variables 'AREA', and 'PROFILE' by default.
            //
            // Returns an Array of the extracted variables indexed in the order they were passed to the Function,
            // or if no variables were able to be extracted, the first element of this Array will be -1.
        function getSkyBlockPlayerListInfo(...&extract_vars[]);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:258
            // Setup valid variables
            if(true);
                &valid_vars[]  = split(", ","AREA, SERVER, PROFILE, BANK, SKILLS, SPEED, STRENGTH, CRIT_CHANCE, CRIT_DAMAGE, ATTACK_SPEED");
                #extract_len   = arraysize(&extract_vars[]);
                assign_default = #extract_len == 0;
                if(!%assign_default%);
                    foreach(&valid_vars[],&valid_var);
                        #extract_idx = indexof(&extract_vars[],,%&valid_var%);
                        if(#extract_idx != -1);
                            &use_out_vars[] = %&valid_var%;
                            #use_out_idxs[] = %#extract_idx%;
                            matched[]       = false;
                        endif;
                    next;
                    #use_out_len   = arraysize(&use_out_vars[]);
                    assign_default = #use_out_len == 0;
                endif;
                
                if(!%assign_default%);
                    sort("ASC",#use_out_idxs[],&use_out_vars[]);
                else;
                    &use_out_vars[] = split(", ","AREA, PROFILE");
                    matched[]       = split(", ","false, false");
                endif;
            endif;
            
            // Compile matches
            if(true);
                #return_index = indexof(&use_out_vars[],,"AREA");
                if(#index_area != -1);
                    &match_names[] = "!C-b";
                    &match_exprs[] = "Area: (.+)"; // Area: Private Island
                endif;
                
                #return_index = indexof(&use_out_vars[],,"SERVER");
                if(#return_index != -1);
                    &match_names[%#return_index%] = "!C-c";
                    &match_exprs[%#return_index%] = "Server: (.+)"; // Server: mini787Q
                endif;
                
                #return_index = indexof(&use_out_vars[],,"PROFILE");
                if(#return_index != -1);
                    &match_names[%#return_index%] = "!D-b";
                    &match_exprs[%#return_index%] = "Profile: (.+)"; // Profile: Pineapple
                endif;
                
                #return_index = indexof(&use_out_vars[],,"BANK");
                if(#return_index != -1);
                    &match_names[%#return_index%] = "!D-d";
                    &match_exprs[%#return_index%] = "Bank: (.+)"; // Bank: 50/50
                endif;
                
                #return_index = indexof(&use_out_vars[],,"SKILLS");
                if(#return_index != -1);
                    &match_names[%#return_index%] = "!D-g";
                    &match_exprs[%#return_index%] = "Skills: (.+)"; // Skills: Foraging 17: 24.1%
                endif;
                
                #return_index = indexof(&use_out_vars[],,"SPEED");
                if(#return_index != -1);
                    &tmp_expr_char                = char("10022");
                    &match_names[%#return_index%] = "!D-h";
                    &match_exprs[%#return_index%] = "Speed: %&tmp_expr_char%(.+)"; // Speed: ✦220
                endif;
                
                #return_index = indexof(&use_out_vars[],,"STRENGTH");
                if(#return_index != -1);
                    &tmp_expr_char                = char("10049");
                    &match_names[%#return_index%] = "!D-i";
                    &match_exprs[%#return_index%] = "Strength: %&tmp_expr_char%(.+)"; // Strength: ❁149
                endif;
                
                #return_index = indexof(&use_out_vars[],,"CRIT_CHANCE");
                if(#return_index != -1);
                    &tmp_expr_char                = char("9763");
                    &match_names[%#return_index%] = "!D-j";
                    &match_exprs[%#return_index%] = "Crit Chance: %&tmp_expr_char%(.+)"; // Crit Chance: ☣64
                endif;
                
                #return_index  = indexof(&use_out_vars[],,"CRIT_DAMAGE");
                if(#return_index != -1);
                    &tmp_expr_char                = char("9760");
                    &match_names[%#return_index%] = "!D-k";
                    &match_exprs[%#return_index%] = "Crit Damage: %&tmp_expr_char%(.+)"; // Crit Damage: ☠130
                endif;
                
                #return_index  = indexof(&use_out_vars[],,"ATTACK_SPEED");
                if(#return_index != -1);
                    &tmp_expr_char                = char("9876");
                    &match_names[%#return_index%] = "!D-l";
                    &match_exprs[%#return_index%] = "Attack Speed: %&tmp_expr_char%(.+)"; // Attack Speed: ⚔0
                endif;
            endif;
            
            foreach("players");
                #line_index = indexof(&match_names[],,%PLAYERNAME%);
                if(#line_index != -1);
                    matched[%#line_index%] = true;
                    &line_text             = strip(%PLAYERDISPLAYNAME%);
                    &line_text             = trim(%&line_text%);
                    ifmatches(%&line_text%,%&match_exprs[%#line_index%]%,&capture_group,1);
                        &return_array[%#line_index%] = %&capture_group%;
                        #non_matched_var_index       = indexof(matched[],,false);
                        if(#non_matched_var_index == -1);
                            break;
                        endif;
                    endif;
                endif;
            next;
            
            #return_len = arraysize(&return_array[]);
            if(#return_len == 0);
                &return_array[] = -1;
            endif;
            return(&return_array[]);
        endfunction;
    // info/index/getSkyBlockArea
        // Gets the SkyBlock Server Type that we are currently connected to. Returns SKYBLOCK_HUB, SKYBLOCK_HOME, or OTHER. OTHER is only returned if
        // the Function cannot determine whether it is on a SkyBlock Server, or if it is not on a SkyBlock Server.
            // Params:
            //      None
            //
            // Returns one of the following strings: 'SKYBLOCK_HUB', 'SKYBLOCK_HOME', 'OTHER'. 'OTHER' is returned if none of the functions return any
            // parseable values.
        function getSkyBlockArea();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:577
            &playerlist_area = getSkyBlockPlayerListInfo("AREA");
            if(%&playerlist_area% == "-1");
                &scoreboard_area = getScoreboardSkyBlockArea();
                if(%&scoreboard_area% == "-1");
                    &wtfmap_area = getSkyBlockAreaFromWTFMAP();
                    if(%&wtfmap_area% == "SkyBlock Hub");
                        return("SKYBLOCK_HUB");
                    elseif(%&wtfmap_area% == "SkyBlock Dynamic");
                        return("SKYBLOCK_HOME");
                    endif;
                    return("OTHER");
                elseif(%&playerlist_area% == "Your Island");
                    return("SKYBLOCK_HOME");
                else;
                    return("SKYBLOCK_HUB");
                endif;
            elseif(%&playerlist_area% == "Private Island");
                return("SKYBLOCK_HOME");
            else;
                return("SKYBLOCK_HUB");
            endif;
        endfunction;
    // info/index/isInLimbo
        // Checks if the Player is in Limbo by reading the Dimension, as well as checking to see if there are any signs at the sign positions
        // where they normally are in Limbo.
            // Params:
            //      None
            //
            // Returns a boolean indicating whether or not the Player is in Limbo.
        function isInLimbo();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:475
            if((%YPOS% > 35) || (%DIMENSION% != "END"));
                return(False);
            endif;
            
            #limbo_x = -20;
            #limbo_y = 32;
            #limbo_z = 21;
            
            if((%XPOS% == #limbo_x) && (%YPOS% == #limbo_y) && (%ZPOS% == #limbo_z));
                return(True);
            endif;
            
            &armor_vars[] = split(", ","ITEM, BOOTSID, LEGGINGSID, CHESTPLATEID, HELMID");
            all_air       = true;
            foreach(&armor_vars[],&armor_var);
                &armor_val = "%%&armor_var%%";
                if(%&armor_val% != "air");
                    all_air = false;
                    break;
                endif;
            next;
            if((%SLOTSFULL% == 0) && (%all_air%));
                return(True);
            endif;
            
            #sign_x   = -21;
            #sign_y[] = split(", ","31, 32, 33");
            #sign_z[] = split(", ","20, 21, 22");
            foreach(#sign_y[],#sign_y);
                foreach(#sign_z[],#sign_z);
                    &block_id = getid(%#sign_x%,%#sign_y%,%#sign_z%);
                    if(&block_id == "wall_sign");
                        in_limbo = true;
                        break;
                    endif;
                next;
            next;
        endfunction;
    // info/index/getHypixelGamemodeFromScoreboard
        // Attempts to read the Scoreboard (foreach("teams") ... prefix + suffix ... next) to find the Player's location on Hypixel
            // Params:
            //      None
            //
            // Returns one of the following strings: 'LOBBY', 'SKYBLOCK', or 'OTHER'. 'OTHER' indicates that the function
            // was not able to determine which area the Player is located in.
        function getHypixelGamemodeFromScoreboard();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:382
            &return_string = "OTHER";
            
            // Setup indicator strings
            if(true);
                &match_expr[] = "Games in this lobby are"; // Only shown in Prototype Lobby Servers
                &match_area[] = "LOBBY";
                
                &match_expr[] = "^Achievements: .+$"; // Only shown in Hypixel Main Lobby Servers
                &match_area[] = "LOBBY";
                
                &match_expr[] = "^Purse: [0-9,.]+"; // Only shown in SkyBlock Servers
                &match_area[] = "SKYBLOCK";
                
                &match_expr[] = "^Bits: [0-9,.]+"; // Only shown in SkyBlock Servers
                &match_area[] = "SKYBLOCK";
            endif;
            
            foreach("teams");
                &joint_team = strip("%TEAMPREFIX%%TEAMSUFFIX%");
                &joint_team = trim(%&joint_team%);
                &joint_team = regexreplace(&joint_team,"^\s*","");
                foreach(&match_expr[],&match_expr,#mei);
                    ifmatches(%&joint_team%,%&match_expr%);
                        &return_string = %&match_area[%#mei%]%;
                        break;
                    endif;
                next;
            next;
            
            return(%&return_string%);
        endfunction;
    // info/index/getItemName
        // Given the NBT Data of an Item (and optionally it's base item), extracts the Display Name of the Item from the NBT Data.
            // Params:
            //      {string} <&nbt>         The NBT Data to extract the Name from.
            //      {string} [&item="air"]  The Item this NBT Data was collected from (only used in cases where the Item's Name cannot be found).
            //      {boolean} [strip=true]  Whether or not to strip formatting codes from the extracted Name.
            //
            // Returns the Display Name of the Item found from it's NBT Data, with formatting codes stripped if [strip] is true.
        function getItemName(&nbt,&item="air",strip=true);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:49
            ifmatches(%&nbt%,".*\bName\s*:\"\s*(.*?)\"",&found_name,1);
                if(%strip%);
                    &found_name = strip(%&found_name%);
                endif;
            elseif(%&item% == "air");
                &found_name = "Air";
            endif;
            return(%&found_name%);
        endfunction;
    // info/index/getHypixelGamemode
        // Gets the current Gamemode / Gametype that the Player is in by reading the Scoreboard, etc.
        // Params:
        //      None
        //
        // Returns one of: 'LOBBY', 'LIMBO', 'SKYBLOCK', or 'OTHER'.
        function getHypixelGamemode();
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/info/index.txt:520
            if(true);
                do(3);
                    // Check to see if we can read the Gamemode from the 9th Hotbar Slot.
                    if(true);
                        #static_hb_end = 44;
                        &found_item    = getslotiteminv(%#static_hb_end%,,#found_stack,#found_data,&found_nbt);
                        &found_nbt     = strip(%&found_nbt%);
                        &found_name    = getItemName(%&found_nbt%,%&found_item%);
                        
                        &known_names[] = split(", ","Lobby Selector (Right Click), SkyBlock Menu (Right Click)");
                        &known_areas[] = split(", ","LOBBY, SKYBLOCK");
                        #known_index   = indexof(&known_names[],,%&found_name%);
                        if(%#known_index% != -1);
                            &return_string = %&known_areas[%#known_index%]%;
                            break;
                        endif;
                    endif;
                    
                    // Cant find the Gamemode from the 9th Hotbar Slot, have to read additional Data. Check to see if we can find any Data from the Playerlist.
                    &skyblock_area = getSkyBlockPlayerListInfo("AREA");
                    if(%&skyblock_area% != "-1");
                        &return_string = "SKYBLOCK";
                        break;
                    endif;
                    
                    // Try to read the location from the Scoreboard.
                    &scoreboard_location = getHypixelGamemodeFromScoreboard();
                    if(%&scoreboard_location% != "OTHER");
                        &return_string = %&scoreboard_location%;
                        break;
                    endif;
                    
                    // Check if we are in Limbo as a last resort
                    in_limbo = isInLimbo();
                    if(%in_limbo%);
                        &return_string = "LIMBO";
                        break;
                    endif;
                    
                    wait("1000ms");
                loop;
            endif;
            
            if(%&return_string% != "");
                return(%&return_string%);
            endif;
            return("OTHER");
        endfunction;
    // debug/index/debug_error
        // Logs a message to chat with an error prefix.
            // Params:
            //      <boolean> debug_enabled      : The debug condition (if true, will log).
            //      <string>  &script_debug_name : The prefix for the debug log
            //      <string>  &string            : The debug message to print to chat
            //
            // Returns the printed message.
            //
        function debug_error(debug_enabled=true,&script_debug_name="&8DEBUG_LOG&7",&string);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/debug/index.txt:49
            // &matcher       = "(?-i)(?<!&)(&[a-fk-r])(?=[a-z0-9_-]+)";
            // &replacement   = "&$1";
            // &string        = regexreplace(&string,%&matcher%,%&replacement%);
            &error_message = "&4Error > &c%&string%";
            &error_message = regexreplace(&error_message,"&7","&c");
            &error_message = "&7%&script_debug_name%&7: %&error_message%";
            if(%debug_enabled%);
                log(%&error_message%);
            endif;
            return(%&error_message%);
        endfunction;
    // movement/index/gotoServer
        // Given a Server type to get to, gets to the Server type from wherever we are. Returns a boolean indicating
        // whether or not the action was successful.
            // Params:
            //      {string} [&target_server="SKYBLOCK_HOME"]   The target server to get to. Valid values are: 'SKYBLOCK',
            //                                                  'SKYBLOCK_HUB', 'SKYBLOCK_HOME. Defaults to 'SKYBLOCK_HOME'.
            //                                                  If set to 'SKYBLOCK', will accept any SkyBlock server.
            //      {number} [#command_wait_ticks=100]          Amount of ticks to wait between issuing each command needed.
            //      {number} [#timeout_sec=300]                 Amount of seconds to attempt this action before timing out and
            //                                                  returning false. Set to -1 to make the action try to go on indefinitely.
            //                                                  Defaults to 300 (5 minutes).
            //      {boolean} [force_cmd=false]                 If set to true, will force the function to send a command to try and
            //                                                  get to the correct server regardless of whether or not it is already on it
            //                                                  at time of function call.
            //
            // Returns a boolean indicating whether or not the Player is on the [&target_server] at the time of function exit.
        function gotoServer(&target_server="SKYBLOCK_HOME",#command_wait_ticks=100,#timeout_sec=300,force_cmd=false);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/movement/index.txt:339
            debug              = true;
            &script_debug_name = "&4gotoServer";
            
            &target_server = miscValidate(%&target_server%,0,"SKYBLOCK_HOME","SKYBLOCK_HUB","SKYBLOCK");
            do_timeout     = #timeout_sec > 0;
            #start_time    = %TIMESTAMP%;
            &encode_vars[] = split(", ","@&auto-restarts-case, @world_changed, BIOME, DIMENSION, XPOS, YPOS, ZPOS"); // Variables used to detect a world change event.
            first_loop     = false;
            #min_tick_wait = %#command_wait_ticks% / 2; // used to ensure we do not spam requests if we switch servers quickly
            
            do;
                if(%do_timeout%);
                    func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
                    if(%func_timeout%);
                        debug_error(%debug%,%&script_debug_name%,"Function timed out.");
                        break;
                    endif;
                endif;
                
                // Figure out what type of command we are going to need to issue.
                if(!%do_override%);
                    &hypixel_gamemode = getHypixelGamemode(); // 'LOBBY', 'LIMBO', 'SKYBLOCK', or 'OTHER'.
                    debug_log(%debug%,%&script_debug_name%,"force_cmd: %force_cmd%, target_server: %&target_server%, hypixel_gamemode: %&hypixel_gamemode%");
                    if(%&hypixel_gamemode% == "SKYBLOCK");
                        return_boolean = %&target_server% == "SKYBLOCK";
                        if((%return_boolean%) && ((!%force_cmd%) || (%first_loop%)));
                            debug_log(%debug%,%&script_debug_name%,"Got to target_server 'SKYBLOCK'.");
                            break;
                        endif;
                        
                        &skyblock_area = getSkyBlockArea(); // 'SKYBLOCK_HUB', 'SKYBLOCK_HOME', 'OTHER'
                        debug_log(%debug%,%&script_debug_name%,"force_cmd: %force_cmd%, target_server: %&target_server%, hypixel_gamemode: %&hypixel_gamemode%, skyblock_area: %&skyblock_area%");
                        return_boolean = %&target_server% == %&skyblock_area%;
                        if((%return_boolean%) && ((!%force_cmd%) || (%first_loop%)));
                            debug_log(%debug%,%&script_debug_name%,"Got to target_server '%&skyblock_area%'.");
                            break;
                        endif;
                        
                        if(%&skyblock_area% == "SKYBLOCK_HUB");
                            if((%force_cmd%) && (%&target_server% == "SKYBLOCK_HUB"));
                                &echo_command = "/warp hub";
                            else;
                                &echo_command = "/warp home";
                            endif;
                        elseif(%&skyblock_area% == "SKYBLOCK_HOME");
                            &echo_command = "/warp hub";
                        elseif(%&skyblock_area% == "OTHER");
                            &echo_command = "/lobby";
                        endif;
                    elseif(%&hypixel_gamemode% == "LIMBO");
                        &echo_command = "/lobby";
                    elseif(%&hypixel_gamemode% == "LOBBY");
                        &echo_command = "/play skyblock";
                    elseif(%&hypixel_gamemode% == "OTHER");
                        &echo_command = "/lobby";
                    endif;
                else;
                    // Issue the override "/lobby" command to break out of the "Cannot send chat message" loop.
                    &echo_command = "/lobby";
                    do_override   = false;
                endif;
                debug_log(%debug%,%&script_debug_name%,"echo_command: &d%&echo_command%");
                
                // Issue the command and wait for an update in our environment variables.
                if(true);
                    if((#waited_ticks > 0) && (#waited_ticks < #command_wait_ticks));
                        do;
                            wait("1t");
                            inc(#waited_ticks);
                        until(%#waited_ticks% >= %#command_wait_ticks%);
                    endif;
                
                    foreach(&encode_vars[],&encode_var,#evi);
                        ifmatches(%&encode_var%,"(?-i:[a-z])"); // Unset any global variables, i.e. '@world_changed'.
                            unset(%&encode_var%);
                        endif;
                        &initial_vals[%#evi%] = "%%&encode_var%%";
                    next;
                    
                    debug_log(%debug%,%&script_debug_name%,"running %&echo_command%");
                    echo(%&echo_command%);
                    env_updated   = false;
                    #waited_ticks = 0;
                    do(%#command_wait_ticks%);
                        wait("1t");
                        inc(#waited_ticks);
                        foreach(&encode_vars[],&encode_var,#evi);
                            &encode_val = "%%&encode_var%%";
                            if(%&initial_vals[%#evi%]% != %&encode_val%);
                                env_updated = true; // Break early as soon as we detect some sort of change in our environment.
                                break;
                            endif;
                        next;
                    until(%env_updated%);
                    
                    // Check to see if we hit the @&auto-restarts-case ("Cannot send chat message")
                    if(%@&auto-restarts-case% != "");
                        do_override = true;
                    endif;
                endif;
                
                first_loop = true;
            until((%func_timeout%) || ((%return_boolean%) && ((!%force_cmd%) || (%first_loop%))));
            
            return(%return_boolean%);
        endfunction;
    // gui/index/remoteGUI
        // Changes the current GUI to a remote GUI.
        // NOTE: For /viewcollection commands to work, CHATFILTER must include:
            // Expression:
                //    ifmatches(%CHATCLEAN%,"^You haven't found this item yet!$");
                //        @remote_gui_collection_unlock_exception = true;
                //    endif;
            // Params:
                // {string}    <&target_gui>                     String ENUM. List of available GUIs below.
                // {number}    [#wait_ticks=@#def_wait_ticks]    Amount of time to wait for in ticks (1t = 50ms)
                // {number}    [#timeout_sec=60]                 Maximum amount of seconds to spend attempting to enter the specified
                //                                               GUI. If this function takes more than or equal to this amount of seconds
                //                                               to complete, the function will exit and return False. Set to -1 for infinite.
            // Returns a Boolean indicating whether or not we were able to enter the specified GUI.
            // Example                       : in_gui = remoteGUI("SB_MENU");
            // Valid ENUMs for <&target_gui> :
                //  'SB_MENU'              : /sbmenu
                //  'TRADES'               : /sbmenu => emerald item
                //  'BOOSTER'              : /sbmenu => cookie item
                //  'STATS'                : /sbmenu => skull item (stats menu)
                //    'ACCESSORY_BAG'        : /sbmenu => accessory bag item (slot 53)
                //  'CALENDAR'             : /calendar
                //  'STORAGE'              : /storage
                //  'ENDERCHEST'           : /enderchest
                //  'PROFILES'             : /profiles
                //  'EFFECTS'              : /effects (note; cannot disable effects from this GUI)
                //  'CRAFT_ITEM'           : /craft
                //  'ANVIL'                : /anvil (only works if booster cookie effect is applied)
                //  'BAZAAR'               : /bazaar (only works if booster cookie effect is applied)
                //  'AUCTION_HOUSE'        : /auctions (only works if booster cookie effect is applied)
                //  'ENCHANTING'           : /enchantingtable (only works if booster cookie effect is applied)
                //  'SKILLS'               : /skills
                    //  'SKILLS_FARMING'       : /skills => farming
                    //  'SKILLS_MINING'        : /skills => mining
                    //  'SKILLS_COMBAT'        : /skills => combat
                    //  'SKILLS_FORAGING'      : /skills => foraging
                    //  'SKILLS_FISHING'       : /skills => fishing
                    //  'SKILLS_ENCHANTING'    : /skills => enchanting
                    //  'SKILLS_ALCHEMY'       : /skills => alchemy
                    //  'SKILLS_RUNECRAFTING'  : /skills => runecrafting
                    //  'SKILLS_SOCIAL'        : /skills => social
                    //  'SKILLS_TAMING'        : /skills => taming
                    //  'SKILLS_DUNGEONEERING' : /skills => dungeoneering
                //  'SB_SETTINGS'          : /viewsettings
                    //  'SB_SETTINGS_PERSONAL' : /viewsettings => personal
                    //  'SB_SETTINGS_COMMS'    : /viewsettings => comms
                    //  'SB_SETTINGS_IS'       : /viewsettings => island
                    //  'SB_SETTINGS_API'      : /viewsettings => api
                    //  'SB_SETTINGS_IS_MGMT'  : /viewsettings => island management
                //  'HY_SETTINGS'          : /settings
                    //  'HY_SETTINGS_GAME'     : /settings => game
                    //  'HY_SETTINGS_CHAT'     : /settings => chat
                    //  'HY_SETTINGS_SOCIAL'   : /settings => social
                    //  'HY_SETTINGS_LOBBY'    : /settings => lobby
                    //  'HY_SETTINGS_API'      : /settings => api
                    //  'HY_SETTINGS_GUILD'    : /settings => guild
                //  'COLLECTIONS'          : /collections
                    //  'COLLECTIONS_INK_SACK:3'             : /viewcollection INK_SACK:3             (Cocoa Beans)
                    //  'COLLECTIONS_CARROT_ITEM'            : /viewcollection CARROT_ITEM            (Carrot)
                    //  'COLLECTIONS_CACTUS'                 : /viewcollection CACTUS                 (Cactus)
                    //  'COLLECTIONS_RAW_CHICKEN'            : /viewcollection RAW_CHICKEN            (Raw Chicken)
                    //  'COLLECTIONS_SUGAR_CANE'             : /viewcollection SUGAR_CANE             (Sugar Cane)
                    //  'COLLECTIONS_PUMPKIN'                : /viewcollection PUMPKIN                (Pumpkin)
                    //  'COLLECTIONS_WHEAT'                  : /viewcollection WHEAT                  (Wheat)
                    //  'COLLECTIONS_SEEDS'                  : /viewcollection SEEDS                  (Seeds)
                    //  'COLLECTIONS_MUSHROOM_COLLECTION'    : /viewcollection MUSHROOM_COLLECTION    (Mushroom)
                    //  'COLLECTIONS_RABBIT'                 : /viewcollection RABBIT                 (Raw Rabbit)
                    //  'COLLECTIONS_NETHER_STALK'           : /viewcollection NETHER_STALK           (Nether Wart)
                    //  'COLLECTIONS_MUTTON'                 : /viewcollection MUTTON                 (Mutton)
                    //  'COLLECTIONS_MELON'                  : /viewcollection MELON                  (Melon)
                    //  'COLLECTIONS_POTATO_ITEM'            : /viewcollection POTATO_ITEM            (Potato)
                    //  'COLLECTIONS_LEATHER'                : /viewcollection LEATHER                (Leather)
                    //  'COLLECTIONS_PORK'                   : /viewcollection PORK                   (Raw Porkchop)
                    //  'COLLECTIONS_FEATHER'                : /viewcollection FEATHER                (Feather)
                    //  'COLLECTIONS_INK_SACK:4'             : /viewcollection INK_SACK:4             (Lapis Lazuli)
                    //  'COLLECTIONS_REDSTONE'               : /viewcollection REDSTONE               (Redstone)
                    //  'COLLECTIONS_COAL'                   : /viewcollection COAL                   (Coal)
                    //  'COLLECTIONS_ENDER_STONE'            : /viewcollection ENDER_STONE            (End Stone)
                    //  'COLLECTIONS_QUARTZ'                 : /viewcollection QUARTZ                 (Nether Quartz)
                    //  'COLLECTIONS_SAND'                   : /viewcollection SAND                   (Sand)
                    //  'COLLECTIONS_IRON_INGOT'             : /viewcollection IRON_INGOT             (Iron Ingot)
                    //  'COLLECTIONS_GEMSTONE_COLLECTION'    : /viewcollection GEMSTONE_COLLECTION    (Gemstone)
                    //  'COLLECTIONS_OBSIDIAN'               : /viewcollection OBSIDIAN               (Obsidian)
                    //  'COLLECTIONS_DIAMOND'                : /viewcollection DIAMOND                (Diamond)
                    //  'COLLECTIONS_COBBLESTONE'            : /viewcollection COBBLESTONE            (Cobblestone)
                    //  'COLLECTIONS_GLOWSTONE_DUST'         : /viewcollection GLOWSTONE_DUST         (Glowstone Dust)
                    //  'COLLECTIONS_GOLD_INGOT'             : /viewcollection GOLD_INGOT             (Gold Ingot)
                    //  'COLLECTIONS_GRAVEL'                 : /viewcollection GRAVEL                 (Gravel)
                    //  'COLLECTIONS_HARD_STONE'             : /viewcollection HARD_STONE             (Hard Stone)
                    //  'COLLECTIONS_MITHRIL_ORE'            : /viewcollection MITHRIL_ORE            (Mithril)
                    //  'COLLECTIONS_EMERALD'                : /viewcollection EMERALD                (Emerald)
                    //  'COLLECTIONS_ICE'                    : /viewcollection ICE                    (Ice)
                    //  'COLLECTIONS_NETHERRACK'             : /viewcollection NETHERRACK             (Netherrack)
                    //  'COLLECTIONS_ENDER_PEARL'            : /viewcollection ENDER_PEARL            (Ender Pearl)
                    //  'COLLECTIONS_SLIME_BALL'             : /viewcollection SLIME_BALL             (Slimeball)
                    //  'COLLECTIONS_MAGMA_CREAM'            : /viewcollection MAGMA_CREAM            (Magma Cream)
                    //  'COLLECTIONS_GHAST_TEAR'             : /viewcollection GHAST_TEAR             (Ghast Tear)
                    //  'COLLECTIONS_SULPHUR'                : /viewcollection SULPHUR                (Gunpowder)
                    //  'COLLECTIONS_ROTTEN_FLESH'           : /viewcollection ROTTEN_FLESH           (Rotten Flesh)
                    //  'COLLECTIONS_SPIDER_EYE'             : /viewcollection SPIDER_EYE             (Spider Eye)
                    //  'COLLECTIONS_BONE'                   : /viewcollection BONE                   (Bone)
                    //  'COLLECTIONS_BLAZE_ROD'              : /viewcollection BLAZE_ROD              (Blaze Rod)
                    //  'COLLECTIONS_STRING'                 : /viewcollection STRING                 (String)
                    //  'COLLECTIONS_LOG_2'                  : /viewcollection LOG_2                  (Acacia Wood)
                    //  'COLLECTIONS_LOG:1'                  : /viewcollection LOG:1                  (Spruce Wood)
                    //  'COLLECTIONS_LOG:3'                  : /viewcollection LOG:3                  (Jungle Wood)
                    //  'COLLECTIONS_LOG:2'                  : /viewcollection LOG:2                  (Birch Wood)
                    //  'COLLECTIONS_LOG'                    : /viewcollection LOG                    (Oak Wood)
                    //  'COLLECTIONS_LOG_2:1'                : /viewcollection LOG_2:1                (Dark Oak Wood)
                    //  'COLLECTIONS_WATER_LILY'             : /viewcollection WATER_LILY             (Lily Pad)
                    //  'COLLECTIONS_PRISMARINE_SHARD'       : /viewcollection PRISMARINE_SHARD       (Prismarine Shard)
                    //  'COLLECTIONS_INK_SACK'               : /viewcollection INK_SACK               (Ink Sack)
                    //  'COLLECTIONS_RAW_FISH'               : /viewcollection RAW_FISH               (Raw Fish)
                    //  'COLLECTIONS_RAW_FISH:3'             : /viewcollection RAW_FISH:3             (Pufferfish)
                    //  'COLLECTIONS_RAW_FISH:2'             : /viewcollection RAW_FISH:2             (Clownfish)
                    //  'COLLECTIONS_RAW_FISH:1'             : /viewcollection RAW_FISH:1             (Raw Salmon)
                    //  'COLLECTIONS_PRISMARINE_CRYSTALS'    : /viewcollection PRISMARINE_CRYSTALS    (Prismarine Crystals)
                    //  'COLLECTIONS_CLAY'                   : /viewcollection CLAY                   (Clay)
                    //  'COLLECTIONS_SPONGE'                 : /viewcollection SPONGE                 (Sponge)
        function remoteGUI(&target_gui,#tick_wait=20,#timeout_sec=60);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/gui/index.txt:489
            &script_debug_name = "&9remoteGUI";
            debug              = true;
            do_timeout         = #timeout_sec > 0;
            #start_time        = %TIMESTAMP%;
            
            // Validate input
            if(true);
                &valid_guis[] = split(", ","SB_MENU, TRADES, ACCESSORY_BAG, BOOSTER, STATS, CALENDAR, STORAGE, ENDERCHEST, PROFILES, EFFECTS, CRAFT_ITEM, ANVIL, BAZAAR, AUCTION_HOUSE, ENCHANTING, SKILLS, SKILLS_FARMING, SKILLS_MINING, SKILLS_COMBAT, SKILLS_FORAGING, SKILLS_FISHING, SKILLS_ENCHANTING, SKILLS_ALCHEMY, SKILLS_RUNECRAFTING, SKILLS_SOCIAL, SKILLS_TAMING, SKILLS_DUNGEONEERING, SB_SETTINGS, SB_SETTINGS_PERSONAL, SB_SETTINGS_COMMS, SB_SETTINGS_IS, SB_SETTINGS_API, SB_SETTINGS_IS_MGMT, HY_SETTINGS, HY_SETTINGS_GAME, HY_SETTINGS_CHAT, HY_SETTINGS_SOCIAL, HY_SETTINGS_LOBBY, HY_SETTINGS_API, HY_SETTINGS_GUILD, COLLECTIONS, COLLECTIONS_INK_SACK:3, COLLECTIONS_CARROT_ITEM, COLLECTIONS_CACTUS, COLLECTIONS_RAW_CHICKEN, COLLECTIONS_SUGAR_CANE, COLLECTIONS_PUMPKIN, COLLECTIONS_WHEAT, COLLECTIONS_SEEDS, COLLECTIONS_MUSHROOM_COLLECTION, COLLECTIONS_RABBIT, COLLECTIONS_NETHER_STALK, COLLECTIONS_MUTTON, COLLECTIONS_MELON, COLLECTIONS_POTATO_ITEM, COLLECTIONS_LEATHER, COLLECTIONS_PORK, COLLECTIONS_FEATHER, COLLECTIONS_INK_SACK:4, COLLECTIONS_REDSTONE, COLLECTIONS_COAL, COLLECTIONS_ENDER_STONE, COLLECTIONS_QUARTZ, COLLECTIONS_SAND, COLLECTIONS_IRON_INGOT, COLLECTIONS_GEMSTONE_COLLECTION, COLLECTIONS_OBSIDIAN, COLLECTIONS_DIAMOND, COLLECTIONS_COBBLESTONE, COLLECTIONS_GLOWSTONE_DUST, COLLECTIONS_GOLD_INGOT, COLLECTIONS_GRAVEL, COLLECTIONS_HARD_STONE, COLLECTIONS_MITHRIL_ORE, COLLECTIONS_EMERALD, COLLECTIONS_ICE, COLLECTIONS_NETHERRACK, COLLECTIONS_ENDER_PEARL, COLLECTIONS_SLIME_BALL, COLLECTIONS_MAGMA_CREAM, COLLECTIONS_GHAST_TEAR, COLLECTIONS_SULPHUR, COLLECTIONS_ROTTEN_FLESH, COLLECTIONS_SPIDER_EYE, COLLECTIONS_BONE, COLLECTIONS_BLAZE_ROD, COLLECTIONS_STRING, COLLECTIONS_LOG_2, COLLECTIONS_LOG:1, COLLECTIONS_LOG:3, COLLECTIONS_LOG:2, COLLECTIONS_LOG, COLLECTIONS_LOG_2:1, COLLECTIONS_WATER_LILY, COLLECTIONS_PRISMARINE_SHARD, COLLECTIONS_INK_SACK, COLLECTIONS_RAW_FISH, COLLECTIONS_RAW_FISH:3, COLLECTIONS_RAW_FISH:2, COLLECTIONS_RAW_FISH:1, COLLECTIONS_PRISMARINE_CRYSTALS, COLLECTIONS_CLAY, COLLECTIONS_SPONGE");
                #valid_index  = indexof(&valid_guis[],,%&target_gui%);
                &target_gui   = ucase(%&valid_guis[%#valid_index%]%);
                if(%#valid_index% == -1);
                    debug_error(%debug%,%&script_debug_name%,"Invalid TargetGUI &4%&target_gui%&7 passed.");
                    return(False);
                endif;
                debug_log(%debug%,%&script_debug_name%,"TargetGUI: %&target_gui%");
            endif;
            
            // Define different GUI types.
            if(true);
                // SkyBlock Command GUIs (has a shortcut command, no caveats as to when the command can be used).
                if(true);
                    // GUI Parameter Terms
                    &command_guis[] = split(", ","HY_SETTINGS, SB_SETTINGS, SB_MENU, CALENDAR, STORAGE, ENDERCHEST, PROFILES, EFFECTS, CRAFT_ITEM, SKILLS, COLLECTIONS, COLLECTIONS_INK_SACK:3, COLLECTIONS_CARROT_ITEM, COLLECTIONS_CACTUS, COLLECTIONS_RAW_CHICKEN, COLLECTIONS_SUGAR_CANE, COLLECTIONS_PUMPKIN, COLLECTIONS_WHEAT, COLLECTIONS_SEEDS, COLLECTIONS_MUSHROOM_COLLECTION, COLLECTIONS_RABBIT, COLLECTIONS_NETHER_STALK, COLLECTIONS_MUTTON, COLLECTIONS_MELON, COLLECTIONS_POTATO_ITEM, COLLECTIONS_LEATHER, COLLECTIONS_PORK, COLLECTIONS_FEATHER, COLLECTIONS_INK_SACK:4, COLLECTIONS_REDSTONE, COLLECTIONS_COAL, COLLECTIONS_ENDER_STONE, COLLECTIONS_QUARTZ, COLLECTIONS_SAND, COLLECTIONS_IRON_INGOT, COLLECTIONS_GEMSTONE_COLLECTION, COLLECTIONS_OBSIDIAN, COLLECTIONS_DIAMOND, COLLECTIONS_COBBLESTONE, COLLECTIONS_GLOWSTONE_DUST, COLLECTIONS_GOLD_INGOT, COLLECTIONS_GRAVEL, COLLECTIONS_HARD_STONE, COLLECTIONS_MITHRIL_ORE, COLLECTIONS_EMERALD, COLLECTIONS_ICE, COLLECTIONS_NETHERRACK, COLLECTIONS_ENDER_PEARL, COLLECTIONS_SLIME_BALL, COLLECTIONS_MAGMA_CREAM, COLLECTIONS_GHAST_TEAR, COLLECTIONS_SULPHUR, COLLECTIONS_ROTTEN_FLESH, COLLECTIONS_SPIDER_EYE, COLLECTIONS_BONE, COLLECTIONS_BLAZE_ROD, COLLECTIONS_STRING, COLLECTIONS_LOG_2, COLLECTIONS_LOG:1, COLLECTIONS_LOG:3, COLLECTIONS_LOG:2, COLLECTIONS_LOG, COLLECTIONS_LOG_2:1, COLLECTIONS_WATER_LILY, COLLECTIONS_PRISMARINE_SHARD, COLLECTIONS_INK_SACK, COLLECTIONS_RAW_FISH, COLLECTIONS_RAW_FISH:3, COLLECTIONS_RAW_FISH:2, COLLECTIONS_RAW_FISH:1, COLLECTIONS_PRISMARINE_CRYSTALS, COLLECTIONS_CLAY, COLLECTIONS_SPONGE");
                    
                    // Commands to issue to enter the correct GUI while on SkyBlock.
                    &command_text[] = split(", ","/settings, /viewsettings, /sbmenu, /calendar, /storage, /enderchest, /profiles, /effects, /craft, /skills, /collections, /viewcollection INK_SACK:3, /viewcollection CARROT_ITEM, /viewcollection CACTUS, /viewcollection RAW_CHICKEN, /viewcollection SUGAR_CANE, /viewcollection PUMPKIN, /viewcollection WHEAT, /viewcollection SEEDS, /viewcollection MUSHROOM_COLLECTION, /viewcollection RABBIT, /viewcollection NETHER_STALK, /viewcollection MUTTON, /viewcollection MELON, /viewcollection POTATO_ITEM, /viewcollection LEATHER, /viewcollection PORK, /viewcollection FEATHER, /viewcollection INK_SACK:4, /viewcollection REDSTONE, /viewcollection COAL, /viewcollection ENDER_STONE, /viewcollection QUARTZ, /viewcollection SAND, /viewcollection IRON_INGOT, /viewcollection GEMSTONE_COLLECTION, /viewcollection OBSIDIAN, /viewcollection DIAMOND, /viewcollection COBBLESTONE, /viewcollection GLOWSTONE_DUST, /viewcollection GOLD_INGOT, /viewcollection GRAVEL, /viewcollection HARD_STONE, /viewcollection MITHRIL_ORE, /viewcollection EMERALD, /viewcollection ICE, /viewcollection NETHERRACK, /viewcollection ENDER_PEARL, /viewcollection SLIME_BALL, /viewcollection MAGMA_CREAM, /viewcollection GHAST_TEAR, /viewcollection SULPHUR, /viewcollection ROTTEN_FLESH, /viewcollection SPIDER_EYE, /viewcollection BONE, /viewcollection BLAZE_ROD, /viewcollection STRING, /viewcollection LOG_2, /viewcollection LOG:1, /viewcollection LOG:3, /viewcollection LOG:2, /viewcollection LOG, /viewcollection LOG_2:1, /viewcollection WATER_LILY, /viewcollection PRISMARINE_SHARD, /viewcollection INK_SACK, /viewcollection RAW_FISH, /viewcollection RAW_FISH:3, /viewcollection RAW_FISH:2, /viewcollection RAW_FISH:1, /viewcollection PRISMARINE_CRYSTALS, /viewcollection CLAY, /viewcollection SPONGE");
                    
                    // Regular Expression to match against CONTAINERNAME to determine whether we are in the correct GUI.
                    &command_expr[] = split(", ","Game Settings, Settings, SkyBlock Menu, Calendar and Events, Storage, Ender Chest, Profile Management, Active Effects, Craft Item, Your Skills, ^Collection$, ^Cocoa Beans Collection$, ^Carrot Collection$, ^Cactus Collection$, ^Raw Chicken Collection$, ^Sugar Cane Collection$, ^Pumpkin Collection$, ^Wheat Collection$, ^Seeds Collection$, ^Mushroom Collection$, ^Raw Rabbit Collection$, ^Nether Wart Collection$, ^Mutton Collection$, ^Melon Collection$, ^Potato Collection$, ^Leather Collection$, ^Raw Porkchop Collection$, ^Feather Collection$, ^Lapis Lazuli Collection$, ^Redstone Collection$, ^Coal Collection$, ^End Stone Collection$, ^Nether Quartz Collection$, ^Sand Collection$, ^Iron Ingot Collection$, ^Gemstone Collection$, ^Obsidian Collection$, ^Diamond Collection$, ^Cobblestone Collection$, ^Glowstone Dust Collection$, ^Gold Ingot Collection$, ^Gravel Collection$, ^Hard Stone Collection$, ^Mithril Collection$, ^Emerald Collection$, ^Ice Collection$, ^Netherrack Collection$, ^Ender Pearl Collection$, ^Slimeball Collection$, ^Magma Cream Collection$, ^Ghast Tear Collection$, ^Gunpowder Collection$, ^Rotten Flesh Collection$, ^Spider Eye Collection$, ^Bone Collection$, ^Blaze Rod Collection$, ^String Collection$, ^Acacia Wood Collection$, ^Spruce Wood Collection$, ^Jungle Wood Collection$, ^Birch Wood Collection$, ^Oak Wood Collection$, ^Dark Oak Wood Collection$, ^Lily Pad Collection$, ^Prismarine Shard Collection$, ^Ink Sack Collection$, ^Raw Fish Collection$, ^Pufferfish Collection$, ^Clownfish Collection$, ^Raw Salmon Collection$, ^Prismarine Crystals Collection$, ^Clay Collection$, ^Sponge Collection$");
                    
                    // SkyBlock Skill GUIs
                    if(true);
                        // GUI Parameter Terms
                        &sb_skill_guis[] = split(", ","SKILLS_FARMING, SKILLS_MINING, SKILLS_COMBAT, SKILLS_FORAGING, SKILLS_FISHING, SKILLS_ENCHANTING, SKILLS_ALCHEMY, SKILLS_RUNECRAFTING, SKILLS_SOCIAL, SKILLS_TAMING, SKILLS_DUNGEONEERING");
                        
                        // Commands to issue to enter the correct GUI while on SkyBlock.
                        &sb_skill_text[] = split(", ","/viewskill FARMING, /viewskill MINING, /viewskill COMBAT, /viewskill FORAGING, /viewskill FISHING, /viewskill ENCHANTING, /viewskill ALCHEMY, /viewskill RUNECRAFTING, /viewskill SOCIAL, /viewskill TAMING, /viewskill DUNGEONEERING");
                        
                        // Regular Expression to match against CONTAINERNAME to determine whether we are in the correct GUI.
                        &sb_skill_expr[] = split(", ","Farming Skill, Mining Skill, Combat Skill, Foraging Skill, Fishing Skill, Enchanting Skill, Alchemy Skill, Runecrafting Skill, Social Skill, Taming Skill, Dungeoneering");
                        
                        push(&command_guis[],&sb_skill_guis[*]);
                        push(&command_text[],&sb_skill_text[*]);
                        push(&command_expr[],&sb_skill_expr[*]);
                    endif;
                endif;
                
                // SBMENU GUIs (must type /sbmenu before continuing).
                if(true);
                    // GUI Parameter Terms
                    &sbmenu_guis[] = split(", ","TRADES, BOOSTER, STATS, ACCESSORY_BAG");
                    
                    // Item Base Items to look for in SBMENU to click on to progress
                    &sbmenu_item[] = split(", ","emerald, cookie, skull, skull");
                    
                    // Item Display Names to look for in SBMENU to click on to progress
                    &sbmenu_name[] = split(", ","Trades, Booster Cookie, Your SkyBlock Profile, Accessory Bag");
                    
                    // Regular Expressions to match against CONTAINERNAME to determine whether we are in the correct GUI.
                    &sbmenu_expr[] = split(", ","Trades, Booster Cookie, Your SkyBlock Profile, Accessory Bag");
                endif;
                
                // SkyBlock Setting GUIs (must type /viewsettings before continuing).
                if(true);
                    // GUI Parameter Terms
                    &sbsetting_guis[] = split(", ","SB_SETTINGS_PERSONAL, SB_SETTINGS_COMMS, SB_SETTINGS_IS, SB_SETTINGS_API, SB_SETTINGS_IS_MGMT");
                    
                    // Item Base Items to look for in SB_SETTINGS to click on to progress
                    &sbsetting_item[] = split(", ","skull, sign, repeater, comparator, grass");
                    
                    // Item Display Names to look for in SB_SETTINGS to click on to progress
                    &sbsetting_name[] = split(", ","Personal, Comms, Island Settings, API Settings, Island Management");
                    
                    // Regular Expressions to match against CONTAINERNAME to determine whether we are in the correct GUI.
                    &sbsetting_expr[] = split(", ","Settings - Personal, Settings - Comms, Settings - Island Settings, Settings - API, Island Management");
                endif;
                
                // Hypixel Setting GUIs (must type /settings before continuing).
                if(true);
                    // GUI Parameter Terms
                    &hysetting_guis[] = split(", ","HY_SETTINGS_GAME, HY_SETTINGS_CHAT, HY_SETTINGS_SOCIAL, HY_SETTINGS_LOBBY, HY_SETTINGS_API, HY_SETTINGS_GUILD");
                    
                    // Item Base Items to look for in HY_SETTINGS to click on to progress
                    &hysetting_item[] = split(", ","comparator, paper, iron_bars, nether_star, web, dye");
                    
                    // Item Display Names to look for in HY_SETTINGS to click on to progress
                    &hysetting_name[] = split(", ","Game Settings, Chat Settings, Social Settings, Lobby Settings, API Settings, Personal Guild Settings");
                    
                    // Regular Expressions to match against CONTAINERNAME to determine whether we are in the correct GUI.
                    &hysetting_expr[] = split(", ","Game Settings, Chat Settings, Social Settings, Lobby Settings, API Settings, Personal Guild Settings");
                endif;
                
                // Booster Cookie Effect GUIs (must have Booster Cookie Effect enabled).
                if(true);
                    // GUI Parameter Terms
                    &booster_guis[] = split(", ","BOOSTER, ANVIL, BAZAAR, AUCTION_HOUSE, ENCHANTING");
                    
                    // Commands to issue to enter the correct GUI while on SkyBlock.
                    &booster_text[] = split(", ","/sbmenu, /av, /bz, /ah, /et");
                    
                    // Item Base Items to look for in SBMENU to Progress (only required for 'BOOSTER' exception)
                    &booster_item[] = split(", ","cookie");
                    
                    // Item Display Names to look for in SBMENU to click on to progress (only required for 'BOOSTER' exception)
                    &booster_name[] = split(", ","Booster Cookie");
                    
                    &baz_strings = "(?:Farming|Mining|Combat|Woods & Fishes|Oddities)";
                    
                    // Regular Expression to match against CONTAINERNAME to determine whether we are in the correct GUI.
                    &booster_expr[] = split(", ","Booster Cookie, Anvil, Bazaar \u279C %&baz_strings%, ^(?:Co-op )?Auction House$, ^Enchant Item$");
                endif;
            endif;
            
            // Find the type of GUI we are entering.
            if(true);
                #command_index    = indexof(&command_guis[],,%&target_gui%);
                #sbmenu_index     = indexof(&sbmenu_guis[],,%&target_gui%);
                #sbsetting_index  = indexof(&sbsetting_guis[],,%&target_gui%);
                #hysetting_index  = indexof(&hysetting_guis[],,%&target_gui%);
                #booster_index    = indexof(&booster_guis[],,%&target_gui%);
                #collection_index = indexof(&collection_guis[],,%&target_gui%);
                
                // For any of the GUIs categorized under command_guis, sbmenu_guis, sbsetting_guis, and booster_guis,
                // we have to be on some sort of SkyBlock Server for them to work. So, if we are entering a GUI found
                // in any of those arrays, get onto a SkyBlock Server beforehand.
                if((#collection_index != -1) || (#command_index != -1) || (#sbmenu_index != -1) || (#sbsetting_index != -1) || (#booster_index != -1));
                    debug_log(%debug%,%&script_debug_name%,"Using a SkyBlock Only command, making sure we are on SkyBlock before command execution...");
                    #goto_server_timeout = -1;
                    do;
                        if(%do_timeout%);
                            #goto_server_timeout = %#timeout_sec% - (%TIMESTAMP% - %#start_time%);
                        endif;
                        on_server = call("gotoServer","SKYBLOCK",100,%#goto_server_timeout%);
                        if(%on_server%);
                            break;
                        endif;
                        wait("1t");
                        
                        func_timeout = ((%do_timeout%) && ((%TIMESTAMP% - %#start_time%) >= %#timeout_sec%));
                    until((%func_timeout%) || (%on_server%));
                    if(%func_timeout%);
                        #elapsed_sec  = %TIMESTAMP% - %#start_time%;
                        &elapsed_time = sectotime(%#elapsed_sec%);
                        debug_error(%debug%,%&script_debug_name%,"Function timed out during gotoServer calls (elapsed time: &4%&elapsed_time%&7).");
                        return(False);
                    endif;
                    debug_log(%debug%,%&script_debug_name%,"On a valid SkyBlock Server, continuing on...");
                endif;
                
                // Handle Booster stuff beforehand if needed (check if effect is applied).
                if(%#booster_index% != -1);
                    debug_log(%debug%,%&script_debug_name%,"Using a Booster Cookie function");
                    booster_enabled = isEffectEnabled("COOKIE");
                    if(!%booster_enabled%);
                        debug_error(%debug%,%&script_debug_name%,"Booster Cookie effect required for TargetGUI: &4%&target_gui%&7.");
                        return(False);
                    endif;
                endif;
                
                // Handle the unique actions required of each remote GUI type.
                if(true);
                    if((%#booster_index% != -1) || (%#command_index% != -1));
                        // Can just issue commands, no need to open GUIs beforehand.
                        if(%#booster_index% != -1);
                            &command_text     = %&booster_text[%#booster_index%]%;
                            &exit_expr        = %&booster_expr[%#booster_index%]%;
                            booster_exception = %&target_gui% == "BOOSTER";
                            if(%booster_exception%);
                                init_gui   = true;
                                &init_gui  = "SB_MENU";
                                &next_item = %&booster_item[%#booster_index%]%;
                                &next_name = %&booster_name[%#booster_index%]%;
                            endif;
                        elseif(%#command_index% != -1);
                            &command_text     = %&command_text[%#command_index%]%;
                            &exit_expr        = %&command_expr[%#command_index%]%;
                        endif;
                    else;
                        init_gui = true;
                        // Must enter some holding menu before continuing.
                        if(%#sbmenu_index% != -1);
                            // Must enter the 'SkyBlock Menu' (SB_MENU) GUI before continuing.
                            &init_gui  = "SB_MENU";
                            &next_item = %&sbmenu_item[%#sbmenu_index%]%;
                            &next_name = %&sbmenu_name[%#sbmenu_index%]%;
                            &exit_expr = %&sbmenu_expr[%#sbmenu_index%]%;
                        elseif(%#sbsetting_index% != -1);
                            // Must enter the 'SkyBlock Settings' (SB_SETTINGS) GUI before continuing.
                            &init_gui  = "SB_SETTINGS";
                            &next_item = %&sbsetting_item[%#sbsetting_index%]%;
                            &next_name = %&sbsetting_name[%#sbsetting_index%]%;
                            &exit_expr = %&sbsetting_expr[%#sbsetting_index%]%;
                        elseif(%#hysetting_index% != -1);
                            // Must enter the 'Hypixel Settings' (HY_SETTINGS) GUI before continuing.
                            &init_gui  = "HY_SETTINGS";
                            &next_item = %&hysetting_item[%#hysetting_index%]%;
                            &next_name = %&hysetting_name[%#hysetting_index%]%;
                            &exit_expr = %&hysetting_expr[%#hysetting_index%]%;
                        endif;
                    endif;
                    
                    do;
                        ifmatches(%CONTAINERNAME%,%&exit_expr%);
                            debug_log(%debug%,%&script_debug_name%,"Breaking, containername matches exit expr (%CONTAINERNAME%, %&exit_expr%)");
                            break;
                        endif;
                        
                        // Check for function timeout
                        if(%do_timeout%);
                            func_timeout = ((%TIMESTAMP% - %#start_time%) >= %#timeout_sec%);
                            if(%func_timeout%);
                                debug_error(%debug%,%&script_debug_name%,"Function timed out while attempting to open a GUI Container.");
                                break;
                            endif;
                        endif;
                        
                        // Execute GUI actions depending on what type of GUI we are currently in and where we need to go.
                        if(true);
                            // Enter the "pre-requisite" GUI, or echo the Command needed to enter the GUI we want to enter.
                            if(%GUI% == "NONE");
                                in_init_gui = false;
                                // Enter the "pre-requisite" GUI.
                                if(%init_gui%);
                                    in_init_gui = call("remoteGUI",%&init_gui%,%#tick_wait%);
                                else;
                                    // Echo the Command needed to enter the GUI we want to enter.
                                    debug_log(%debug%,%&script_debug_name%,"echoing command %&command_text%...");
                                    unset(@remote_gui_collection_unlock_exception);
                                    echo("%&command_text%");
                                    do(%#tick_wait%);
                                        wait("1t");
                                    while((%GUI% == "NONE") && (!%@remote_gui_collection_unlock_exception%));
                                    if(%@remote_gui_collection_unlock_exception%);
                                        debug_error(%debug%,%&script_debug_name%,"Do not have collection '%&target_gui%' unlocked yet!");
                                        break;
                                    endif;
                                endif;
                            elseif((%init_gui%) && (%in_init_gui%));
                                // In the "pre-requisite" GUI, find the item we want to click.
                                if(true);
                                    // Iterate over Dynamic Container Slots
                                    if(true);
                                        #found_slot = -1;
                                        #r_start    = 0;
                                        #r_end      = %CONTAINERSLOTS% - 37;
                                        &r_item     = "%&next_item%";
                                        &r_name     = "%&next_name%";
                                        for(#r_slot,%#r_start%,%#r_end%);
                                            #f_slot = %#r_slot%;
                                            if(%&r_item%);
                                                getslot(%&r_item%,#f_slot,%#r_offset%);
                                            endif;
                                            
                                            if((%#f_slot% >= %#r_start%) && (%#f_slot% <= %#r_end%));
                                                #r_offset = %#f_slot% + 1;
                                                &f_item   = getslotitemnbt(%#f_slot%,,#f_stack,#f_data,&f_nbt);
                                                &f_nbt    = strip(%&f_nbt%);
                                                &f_name   = getItemName(%&f_nbt%,%&f_item%);
                                                &f_sbid   = getItemSBID(%&f_nbt%);
                                                m_item    = ((!%&r_item%) || (%&r_item% == %&f_item%));
                                                m_name    = ((!%&r_name%) || (%&r_name% == %&f_name%));
                                                m_sbid    = ((!%&r_sbid%) || (%&r_sbid% == %&f_sbid%));
                                                m_match   = ((%m_item%) && (%m_name%) && (%m_sbid%));
                                                if(%m_match%);
                                                    #found_slot = %#f_slot%;
                                                    break;
                                                endif;
                                            else;
                                                break;
                                            endif;
                                        next;
                                    endif;
                                    
                                    if(%#found_slot% != -1);
                                        &init_gui_string = getContainerString();
                                        entered_new_gui  = false;
                                        do;
                                            slotclick(%#found_slot%);
                                            do(%#tick_wait%);
                                                wait("1t");
                                                entered_new_gui = enteredNewGUI(%&init_gui_string%);
                                            while(!%entered_new_gui%);
                                        while(!%entered_new_gui%);
                                        in_init_gui = !%entered_new_gui%;
                                    else;
                                        debug_error(%debug%,%&script_debug_name%,"Cannot find 'next' item (base: %&next_item%, name: %&next_name%). GUI: %GUI%, CONTAINERNAME: %CONTAINERNAME%, CONTAINERSLOTS: %CONTAINERSLOTS%.");
                                        break;
                                    endif;
                                endif;
                            else;
                                // In a GUI that is not "NONE", have to leave it.
                                exited_gui = localGUI("NONE",%#tick_wait%);
                            endif;
                        endif;
                    untilmatches(%CONTAINERNAME%,%&exit_expr%);
                endif;
            endif;
            
            ifmatches(%CONTAINERNAME%,%&exit_expr%);
                debug_log(%debug%,%&script_debug_name%,"Success!");
                return_boolean = true;
            else;
                debug_log(%debug%,%&script_debug_name%,"Failure!");
            endif;
            return(%return_boolean%);
        endfunction;
    // misc/index/getNewTimeoutSec
        // Adjusts <#timeout_sec> to be <#timeout_sec> minus amount of seconds elapsed since <#start_time>.
            // Params:
                // {number} <#start_time>         Timestamp of fn start in caller script
                // {number} <#timeout_sec>        Timeout seconds passed to caller script
                // {boolean} [do_timeout=true]    Whether or not the timeout is active (if it is, the function will always
                //                                return a positive number. If it is not, it will allow <= 0 numbers).
            // Returns the new Timeout in Seconds
            // Example:
                //    #recursive_timeout = getNewTimeoutSec(%#start_time%,%#timeout_sec%,%do_timeout%);
        function getNewTimeoutSec(#start_time,#timeout_sec,do_timeout=true);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/misc/index.txt:59
            #recursive_timeout = %#timeout_sec%;
            if(%do_timeout%);
                #recursive_timeout = %#timeout_sec% - (%TIMESTAMP% - %#start_time%);
                if(%#recursive_timeout% <= 0);
                    #recursive_timeout = 1;
                endif;
            endif;
            return(%#recursive_timeout%);
        endfunction;
    // misc/settings/hypixelChangeSettingsArr
        // Given an Array of Setting Key(s) and Setting Value(s), sets each Key to the specified Value.
            // Params:
                // {string} <&setting_keys[]>    The Key(s) of the Setting(s) to Edit. Must be a valid String ENUM, valid
                //                               Elements are listed below.
                // {string} <&setting_vals[]>    The Value(s) to set the Key(s) to.
                // {number} [#timeout_sec=30]    Max amount of Seconds Function can run for before timing out.
                // {number} [#tick_wait=20]      Tick delay to wait for before repeating the same Action.
            // Returns a Boolean Array indicating whether or not we were able to get the Setting to the Specified Value for each Key,
            // indexed parallel to the way the Keys were passed in the <&setting_keys[]> Parameter.
            // Example:
                //    &setting_keys[]   = "PLAYER_DROPS";
                //    &setting_vals[]   = "FALSE";
                //    successful_keys[] = hypixelChangeSettingsArr(&setting_keys[],&setting_vals[]);
            // The following String ENUMs are Valid Keys to pass to this Function:
                // SB_SETTINGS:
                    // DOUBLE_TAP_TO_DROP    BOOLEAN
                    // PROFILE_VIEWER        BOOLEAN
                // SB_SETTINGS_PERSONAL:
                    // PLAYER_TRADING                    BOOLEAN
                    // SKILL_NUMERALS                    BOOLEAN
                    // PLAY_MUSIC                        BOOLEAN
                    // RARE_DROP_SOUND                   BOOLEAN
                    // INVENTORY_FULL_NOTIFICATIONS      BOOLEAN
                    // PICKUP_ARROWS_WITH_FULL_QUIVER    BOOLEAN
                    // FEROCITY_SFX                      BOOLEAN
                    // PLAYER_LIST_INFO                  BOOLEAN
                // SB_SETTINGS_COMMS:
                    // DEATH_MESSAGES               BOOLEAN
                    // GUESTING_INVITES             BOOLEAN
                    // COOP_INVITES                 BOOLEAN
                    // BID_NOTIFICATIONS            BOOLEAN
                    // OUTBID_NOTIFICATIONS         BOOLEAN
                    // FILL_NOTIFICATIONS           BOOLEAN
                    // GUESTING_NOTIFICATIONS       BOOLEAN
                    // COOP_TRAVEL_NOTIFICATIONS    BOOLEAN
                // SB_SETTINGS_IS:
                    // VISITS_ANYONE     BOOLEAN
                    // VISITS_FRIENDS    BOOLEAN
                    // VISITS_GUILD      BOOLEAN
                    // API_BANKING       BOOLEAN
                // SB_SETTINGS_API:
                    // API_SKILLS                 BOOLEAN
                    // API_COLLECTIONS            BOOLEAN
                    // API_INVENTORY              BOOLEAN
                    // API_PERSONAL_BANK_VAULT    BOOLEAN
                // HY_SETTINGS_GAME:
                    // AUTO_QUEUE             BOOLEAN
                    // PARTICLE_QUALITY       STRING [OFF, LOW, MEDIUM, HIGH, EXTREME]
                    // OFFER_MAP_FEEDBACK     BOOLEAN
                    // AUTO_TIP               BOOLEAN (MVP++ Required)
                    // BLOOD_AND_GORE         BOOLEAN
                    // LOBBY_PROTECTION       BOOLEAN
                    // INGAME_MAP_SELECTOR    BOOLEAN
                // HY_SETTINGS_CHAT:
                    // CHAT_VISIBILITY           BOOLEAN
                    // GUILD_CHAT_VISIBILITY     BOOLEAN
                    // PUBLIC_PROFANITY_LEVEL    STRING [STRONG FILTER, WEAK FILTER]
                    // PARTY_PROFANITY_LEVEL     STRING [STRONG FILTER, WEAK FILTER, OFF]
                    // GUILD_PROFANITY_LEVEL     STRING [STRONG FILTER, WEAK FILTER, OFF]
                    // PM_PROFANITY_LEVEL        STRING [STRONG FILTER, WEAK FILTER, OFF]
                    // LOBBY_JOIN_MESSAGE        BOOLEAN (MVP+ Required)
                    // PARTY_MESSAGE_SOUNDS      BOOLEAN
                    // GUILD_MESSAGE_SOUNDS      BOOLEAN
                    // PRIVATE_MESSAGE_SOUNDS    BOOLEAN
                    // CHAT_ALERTS               BOOLEAN
                // HY_SETTINGS_SOCIAL:
                    // ONLINE_STATUS              STRING [ONLINE, AWAY, BUSY, APPEAR OFFLINE]
                    // PRIVATE_MESSAGE_PRIVACY    STRING [MAX, HIGH, MEDIUM, LOW, NONE]
                    // FRIEND_REQUEST_PRIVACY     STRING [MAX, HIGH, MEDIUM, NONE]
                    // DUEL_INVITE_PRIVACY        STRING [MAX, HIGH, MEDIUM, NONE]
                    // PARTY_INVITE_PRIVACY       STRING [MAX, HIGH, MEDIUM, NONE]
                    // GUILD_INVITE_PRIVACY       STRING [MAX, HIGH, MEDIUM, NONE]
                    // SMP_INVITE_PRIVACY         STRING [MAX, HIGH, NONE]
                // HY_SETTINGS_LOBBY:
                    // PLAYER_VISIBILITY    BOOLEAN
                    // PET_VISIBILITY       BOOLEAN
                    // AUTO_SPAWN_PET       BOOLEAN
                    // LOBBY_DARK_MODE      BOOLEAN
                    // AUTO_DENY_GIFTS      BOOLEAN
                // HY_SETTINGS_API:
                    // API_ONLINE_STATUS    BOOLEAN
                    // API_RECENT_GAMES     BOOLEAN
                    // API_WINSTREAKS       BOOLEAN
                // HY_SETTINGS_GUILD:
                    // GUILD_CHAT_VISIBILITY    BOOLEAN
                    // GUILD_NOTIFICATIONS      BOOLEAN
                    // GUILD_ONLINE_ONLY        BOOLEAN
        function hypixelChangeSettingsArr(&setting_keys[],&setting_vals[],#timeout_sec=30,#tick_wait=20);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/misc/settings.txt:613
            // Wrap Function Variables
            if(true);
                debug              = true;
                &script_debug_name = "&6hypixelChangeSettings&7";
                #start_time        = %TIMESTAMP%;
                do_timeout         = %#timeout_sec% > 0;
                
                // Wrap Key Arrays
                if(true);
                    // SB_SETTINGS
                    if(true);
                        &valid_keys[0]      = "DOUBLE_TAP_TO_DROP";
                        &valid_vals[0]      = "BOOLEAN";
                        &valid_guis[0]      = "SB_SETTINGS";
                        &valid_slots[0]     = "29|38";
                        &valid_items[0]     = "diamond_sword|dye";
                        &valid_names[0]     = "Double Tap to Drop|Double Tap to Drop";
                        
                        &valid_keys[1]      = "PROFILE_VIEWER";
                        &valid_vals[1]      = "BOOLEAN";
                        &valid_guis[1]      = "SB_SETTINGS";
                        &valid_slots[1]     = "31|40";
                        &valid_items[1]     = "skull|dye";
                        &valid_names[1]     = "Profile Viewer|Profile Viewer";
                    endif;
                        
                    // SB_SETTINGS_PERSONAL
                    if(true);
                        &valid_keys[2]      = "PLAYER_TRADING";
                        &valid_vals[2]      = "BOOLEAN";
                        &valid_guis[2]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[2]     = "12|21";
                        &valid_items[2]     = "gold_ingot|dye";
                        &valid_names[2]     = "Player Trading|Player Trading";
                        
                        &valid_keys[3]      = "SKILL_NUMERALS";
                        &valid_vals[3]      = "BOOLEAN";
                        &valid_guis[3]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[3]     = "14|23";
                        &valid_items[3]     = "map|dye";
                        &valid_names[3]     = "Skill Numerals|Skill Numerals";
                        
                        &valid_keys[4]      = "PLAY_MUSIC";
                        &valid_vals[4]      = "BOOLEAN";
                        &valid_guis[4]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[4]     = "16|25";
                        &valid_items[4]     = "jukebox|dye";
                        &valid_names[4]     = "Play Music|Play Music";
                        
                        &valid_keys[5]      = "RARE_DROP_SOUND";
                        &valid_vals[5]      = "BOOLEAN";
                        &valid_guis[5]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[5]     = "27|36";
                        &valid_items[5]     = "noteblock|dye";
                        &valid_names[5]     = "Rare Drop Sound|Rare Drop Sound";
                        
                        &valid_keys[6]      = "INVENTORY_FULL_NOTIFICATIONS";
                        &valid_vals[6]      = "BOOLEAN";
                        &valid_guis[6]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[6]     = "29|38";
                        &valid_items[6]     = "chest|dye";
                        &valid_names[6]     = "Inventory Full Notifications|Inventory Full Notifications";
                        
                        &valid_keys[7]      = "PICKUP_ARROWS_WITH_FULL_QUIVER";
                        &valid_vals[7]      = "BOOLEAN";
                        &valid_guis[7]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[7]     = "31|40";
                        &valid_items[7]     = "arrow|dye";
                        &valid_names[7]     = "Pickup Arrows with Full Quiver|Pickup Arrows with Full Quiver";
                        
                        &valid_keys[8]      = "FEROCITY_SFX";
                        &valid_vals[8]      = "BOOLEAN";
                        &valid_guis[8]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[8]     = "33|42";
                        &valid_items[8]     = "dye|dye";
                        &valid_names[8]     = "Ferocity SFX|Ferocity SFX";
                        
                        &valid_keys[9]      = "PLAYER_LIST_INFO";
                        &valid_vals[9]      = "BOOLEAN";
                        &valid_guis[9]      = "SB_SETTINGS_PERSONAL";
                        &valid_slots[9]     = "35|44";
                        &valid_items[9]     = "filled_map|dye";
                        &valid_names[9]     = "Player List Info|Player List Info";
                    endif;
                        
                    // SB_SETTINGS_COMMS
                    if(true);
                        &valid_keys[13]      = "DEATH_MESSAGES";
                        &valid_vals[13]      = "BOOLEAN";
                        &valid_guis[13]      = "SB_SETTINGS_COMMS";
                        &valid_slots[13]     = "11|20";
                        &valid_items[13]     = "sign|dye";
                        &valid_names[13]     = "Death Messages|Death Messages";
                        
                        &valid_keys[14]      = "GUESTING_INVITES";
                        &valid_vals[14]      = "BOOLEAN";
                        &valid_guis[14]      = "SB_SETTINGS_COMMS";
                        &valid_slots[14]     = "14|23";
                        &valid_items[14]     = "emerald|dye";
                        &valid_names[14]     = "Guesting Invites|Guesting Invites";
                        
                        &valid_keys[15]      = "COOP_INVITES";
                        &valid_vals[15]      = "BOOLEAN";
                        &valid_guis[15]      = "SB_SETTINGS_COMMS";
                        &valid_slots[15]     = "16|25";
                        &valid_items[15]     = "diamond|dye";
                        &valid_names[15]     = "Co-op Invites|Co-op Invites";
                        
                        &valid_keys[16]      = "BID_NOTIFICATIONS";
                        &valid_vals[16]      = "BOOLEAN";
                        &valid_guis[16]      = "SB_SETTINGS_COMMS";
                        &valid_slots[16]     = "28|37";
                        &valid_items[16]     = "golden_horse_armor|dye";
                        &valid_names[16]     = "Bid Notifications|Bid Notifications";
                        
                        &valid_keys[17]      = "OUTBID_NOTIFICATIONS";
                        &valid_vals[17]      = "BOOLEAN";
                        &valid_guis[17]      = "SB_SETTINGS_COMMS";
                        &valid_slots[17]     = "29|38";
                        &valid_items[17]     = "gold_ingot|dye";
                        &valid_names[17]     = "Outbid Notifications|Outbid Notifications";
                        
                        &valid_keys[18]      = "FILL_NOTIFICATIONS";
                        &valid_vals[18]      = "BOOLEAN";
                        &valid_guis[18]      = "SB_SETTINGS_COMMS";
                        &valid_slots[18]     = "30|39";
                        &valid_items[18]     = "hopper|dye";
                        &valid_names[18]     = "Fill Notifications|Fill Notifications";
                        
                        &valid_keys[19]      = "GUESTING_NOTIFICATIONS";
                        &valid_vals[19]      = "BOOLEAN";
                        &valid_guis[19]      = "SB_SETTINGS_COMMS";
                        &valid_slots[19]     = "32|41";
                        &valid_items[19]     = "paper|dye";
                        &valid_names[19]     = "Guesting Notifications|Guesting Notifications";
                        
                        &valid_keys[20]      = "COOP_TRAVEL_NOTIFICATIONS";
                        &valid_vals[20]      = "BOOLEAN";
                        &valid_guis[20]      = "SB_SETTINGS_COMMS";
                        &valid_slots[20]     = "34|43";
                        &valid_items[20]     = "paper|dye";
                        &valid_names[20]     = "Co-op Travel Notifications|Co-op Travel Notifications";
                    endif;
                        
                    // SB_SETTINGS_IS
                    if(true);
                        &valid_keys[21]      = "VISITS_ANYONE";
                        &valid_vals[21]      = "BOOLEAN";
                        &valid_guis[21]      = "SB_SETTINGS_IS";
                        &valid_slots[21]     = "11|20";
                        &valid_items[21]     = "saddle|dye";
                        &valid_names[21]     = "Visits: Anyone|Visits: Anyone";
                        
                        &valid_keys[22]      = "VISITS_FRIENDS";
                        &valid_vals[22]      = "BOOLEAN";
                        &valid_guis[22]      = "SB_SETTINGS_IS";
                        &valid_slots[22]     = "13|22";
                        &valid_items[22]     = "stained_hardened_clay|dye";
                        &valid_names[22]     = "Visits: Friends|Visits: Friends";
                        
                        &valid_keys[23]      = "VISITS_GUILD";
                        &valid_vals[23]      = "BOOLEAN";
                        &valid_guis[23]      = "SB_SETTINGS_IS";
                        &valid_slots[23]     = "15|24";
                        &valid_items[23]     = "stained_hardened_clay|dye";
                        &valid_names[23]     = "Visits: Guild|Visits: Guild";
                        
                        &valid_keys[24]      = "API_BANKING";
                        &valid_vals[24]      = "BOOLEAN";
                        &valid_guis[24]      = "SB_SETTINGS_IS";
                        &valid_slots[24]     = "31|40";
                        &valid_items[24]     = "gold_ingot|dye";
                        &valid_names[24]     = "Banking API|Banking API";
                    endif;
                        
                    // SB_SETTINGS_API
                    if(true);
                        &valid_keys[25]      = "API_SKILLS";
                        &valid_vals[25]      = "BOOLEAN";
                        &valid_guis[25]      = "SB_SETTINGS_API";
                        &valid_slots[25]     = "10|19";
                        &valid_items[25]     = "diamond_sword|dye";
                        &valid_names[25]     = "API: Skills|API: Skills";
                        
                        &valid_keys[26]      = "API_COLLECTIONS";
                        &valid_vals[26]      = "BOOLEAN";
                        &valid_guis[26]      = "SB_SETTINGS_API";
                        &valid_slots[26]     = "12|21";
                        &valid_items[26]     = "painting|dye";
                        &valid_names[26]     = "API: Collections|API: Collections";
                        
                        &valid_keys[27]      = "API_INVENTORY";
                        &valid_vals[27]      = "BOOLEAN";
                        &valid_guis[27]      = "SB_SETTINGS_API";
                        &valid_slots[27]     = "14|23";
                        &valid_items[27]     = "chest|dye";
                        &valid_names[27]     = "API: Inventory|API: Inventory";
                        
                        &valid_keys[28]      = "API_PERSONAL_BANK_VAULT";
                        &valid_vals[28]      = "BOOLEAN";
                        &valid_guis[28]      = "SB_SETTINGS_API";
                        &valid_slots[28]     = "16|25";
                        &valid_items[28]     = "ender_chest|dye";
                        &valid_names[28]     = "API: Personal Bank Vault|API: Personal Bank Vault";
                    endif;
                        
                    // HY_SETTINGS_GAME
                    if(true);
                        &valid_keys[29]      = "AUTO_QUEUE";
                        &valid_vals[29]      = "BOOLEAN";
                        &valid_guis[29]      = "HY_SETTINGS_GAME";
                        &valid_slots[29]     = "28|37";
                        &valid_items[29]     = "bed|dye";
                        &valid_names[29]     = "Auto Queue|Auto Queue";
                        
                        &valid_keys[30]      = "PARTICLE_QUALITY";
                        &valid_vals[30]      = "STRING[OFF, LOW, MEDIUM, HIGH, EXTREME]";
                        &valid_guis[30]      = "HY_SETTINGS_GAME";
                        &valid_slots[30]     = "29|38";
                        &valid_items[30]     = "red_flower|dye";
                        &valid_names[30]     = "Particle Quality|Particle Quality";
                        
                        &valid_keys[31]      = "OFFER_MAP_FEEDBACK";
                        &valid_vals[31]      = "BOOLEAN";
                        &valid_guis[31]      = "HY_SETTINGS_GAME";
                        &valid_slots[31]     = "30|39";
                        &valid_items[31]     = "writable_book|dye";
                        &valid_names[31]     = "Offer Map Feedback|Offer Map Feedback";
                        
                        &valid_keys[32]      = "AUTO_TIP";
                        &valid_vals[32]      = "BOOLEAN";
                        &valid_guis[32]      = "HY_SETTINGS_GAME";
                        &valid_slots[32]     = "31|40";
                        &valid_items[32]     = "gold_nugget|dye";
                        &valid_names[32]     = "Auto-Tip|Auto-Tip";
                        
                        &valid_keys[33]      = "BLOOD_AND_GORE";
                        &valid_vals[33]      = "BOOLEAN";
                        &valid_guis[33]      = "HY_SETTINGS_GAME";
                        &valid_slots[33]     = "32|41";
                        &valid_items[33]     = "redstone|dye";
                        &valid_names[33]     = "Blood & Gore|Blood & Gore";
                        
                        &valid_keys[34]      = "LOBBY_PROTECTION";
                        &valid_vals[34]      = "BOOLEAN";
                        &valid_guis[34]      = "HY_SETTINGS_GAME";
                        &valid_slots[34]     = "33|42";
                        &valid_items[34]     = "command_block|dye";
                        &valid_names[34]     = "/lobby Protection|/lobby Protection";
                        
                        &valid_keys[35]      = "INGAME_MAP_SELECTOR";
                        &valid_vals[35]      = "BOOLEAN";
                        &valid_guis[35]      = "HY_SETTINGS_GAME";
                        &valid_slots[35]     = "34|43";
                        &valid_items[35]     = "map|dye";
                        &valid_names[35]     = "In-Game Map Selector|In-Game Map Selector";
                    endif;
                        
                    // HY_SETTINGS_CHAT
                    if(true);
                        &valid_keys[36]      = "CHAT_VISIBILITY";
                        &valid_vals[36]      = "BOOLEAN";
                        &valid_guis[36]      = "HY_SETTINGS_CHAT";
                        &valid_slots[36]     = "19|28";
                        &valid_items[36]     = "paper|dye";
                        &valid_names[36]     = "Chat Visibility|Chat Visibility";
                        
                        &valid_keys[37]      = "GUILD_CHAT_VISIBILITY";
                        &valid_vals[37]      = "BOOLEAN";
                        &valid_guis[37]      = "HY_SETTINGS_CHAT";
                        &valid_slots[37]     = "20|29";
                        &valid_items[37]     = "paper|dye";
                        &valid_names[37]     = "Guild Chat Visibility|Guild Chat Visibility";
                        
                        &valid_keys[38]      = "PUBLIC_PROFANITY_LEVEL";
                        &valid_vals[38]      = "STRING[STRONG FILTER, WEAK FILTER]";
                        &valid_guis[38]      = "HY_SETTINGS_CHAT";
                        &valid_slots[38]     = "22|31";
                        &valid_items[38]     = "anvil|dye";
                        &valid_names[38]     = "Public Profanity Level|Public Profanity Level";
                        
                        &valid_keys[39]      = "PARTY_PROFANITY_LEVEL";
                        &valid_vals[39]      = "STRING[STRONG FILTER, WEAK FILTER, OFF]";
                        &valid_guis[39]      = "HY_SETTINGS_CHAT";
                        &valid_slots[39]     = "23|32";
                        &valid_items[39]     = "anvil|dye";
                        &valid_names[39]     = "Party Profanity Level|Party Profanity Level";
                        
                        &valid_keys[40]      = "GUILD_PROFANITY_LEVEL";
                        &valid_vals[40]      = "STRING[STRONG FILTER, WEAK FILTER, OFF]";
                        &valid_guis[40]      = "HY_SETTINGS_CHAT";
                        &valid_slots[40]     = "24|33";
                        &valid_items[40]     = "anvil|dye";
                        &valid_names[40]     = "Guild Profanity Level|Guild Profanity Level";
                        
                        &valid_keys[41]      = "PM_PROFANITY_LEVEL";
                        &valid_vals[41]      = "STRING[STRONG FILTER, WEAK FILTER, OFF]";
                        &valid_guis[41]      = "HY_SETTINGS_CHAT";
                        &valid_slots[41]     = "25|34";
                        &valid_items[41]     = "anvil|dye";
                        &valid_names[41]     = "PM Profanity Level|PM Profanity Level";
                        
                        &valid_keys[42]      = "LOBBY_JOIN_MESSAGE";
                        &valid_vals[42]      = "BOOLEAN";
                        &valid_guis[42]      = "HY_SETTINGS_CHAT";
                        &valid_slots[42]     = "38|47";
                        &valid_items[42]     = "paper|dye";
                        &valid_names[42]     = "Lobby Join Message (Self)|Lobby Join Message (Self)";
                        
                        &valid_keys[43]      = "PARTY_MESSAGE_SOUNDS";
                        &valid_vals[43]      = "BOOLEAN";
                        &valid_guis[43]      = "HY_SETTINGS_CHAT";
                        &valid_slots[43]     = "40|49";
                        &valid_items[43]     = "noteblock|dye";
                        &valid_names[43]     = "Party Message Sounds|Party Message Sounds";
                        
                        &valid_keys[44]      = "GUILD_MESSAGE_SOUNDS";
                        &valid_vals[44]      = "BOOLEAN";
                        &valid_guis[44]      = "HY_SETTINGS_CHAT";
                        &valid_slots[44]     = "41|50";
                        &valid_items[44]     = "noteblock|dye";
                        &valid_names[44]     = "Guild Message Sounds|Guild Message Sounds";
                        
                        &valid_keys[45]      = "PRIVATE_MESSAGE_SOUNDS";
                        &valid_vals[45]      = "BOOLEAN";
                        &valid_guis[45]      = "HY_SETTINGS_CHAT";
                        &valid_slots[45]     = "42|51";
                        &valid_items[45]     = "noteblock|dye";
                        &valid_names[45]     = "Private Message Sounds|Private Message Sounds";
                        
                        &valid_keys[46]      = "CHAT_ALERTS";
                        &valid_vals[46]      = "BOOLEAN";
                        &valid_guis[46]      = "HY_SETTINGS_CHAT";
                        &valid_slots[46]     = "43|52";
                        &valid_items[46]     = "jukebox|dye";
                        &valid_names[46]     = "Chat Alerts|Chat Alerts";
                    endif;
                        
                    // HY_SETTINGS_SOCIAL
                    if(true);
                        &valid_keys[47]      = "ONLINE_STATUS";
                        &valid_vals[47]      = "STRING[ONLINE, AWAY, BUSY, APPEAR OFFLINE]";
                        &valid_guis[47]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[47]     = "22|31";
                        &valid_items[47]     = "ender_eye|dye";
                        &valid_names[47]     = "Online Status|Online Status";
                        
                        &valid_keys[48]      = "PRIVATE_MESSAGE_PRIVACY";
                        &valid_vals[48]      = "STRING[MAX, HIGH, MEDIUM, LOW, NONE]";
                        &valid_guis[48]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[48]     = "37|46";
                        &valid_items[48]     = "sign|dye";
                        &valid_names[48]     = "Private Message Privacy|Private Message Privacy";
                        
                        &valid_keys[49]      = "FRIEND_REQUEST_PRIVACY";
                        &valid_vals[49]      = "STRING[MAX, HIGH, MEDIUM, NONE]";
                        &valid_guis[49]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[49]     = "38|47";
                        &valid_items[49]     = "skull|dye";
                        &valid_names[49]     = "Friend Request Privacy|Friend Request Privacy";
                        
                        &valid_keys[50]      = "DUEL_INVITE_PRIVACY";
                        &valid_vals[50]      = "STRING[MAX, HIGH, MEDIUM, NONE]";
                        &valid_guis[50]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[50]     = "39|48";
                        &valid_items[50]     = "iron_sword|dye";
                        &valid_names[50]     = "Duel Invite Privacy|Duel Invite Privacy";
                        
                        &valid_keys[51]      = "PARTY_INVITE_PRIVACY";
                        &valid_vals[51]      = "STRING[MAX, HIGH, MEDIUM, NONE]";
                        &valid_guis[51]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[51]     = "41|50";
                        &valid_items[51]     = "book|dye";
                        &valid_names[51]     = "Party Invite Privacy|Party Invite Privacy";
                        
                        &valid_keys[52]      = "GUILD_INVITE_PRIVACY";
                        &valid_vals[52]      = "STRING[MAX, HIGH, MEDIUM, NONE]";
                        &valid_guis[52]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[52]     = "42|51";
                        &valid_items[52]     = "painting|dye";
                        &valid_names[52]     = "Guild Invite Privacy|Guild Invite Privacy";
                        
                        &valid_keys[53]      = "SMP_INVITE_PRIVACY";
                        &valid_vals[53]      = "STRING[MAX, HIGH, NONE]";
                        &valid_guis[53]      = "HY_SETTINGS_SOCIAL";
                        &valid_slots[53]     = "43|52";
                        &valid_items[53]     = "grass|dye";
                        &valid_names[53]     = "SMP Invite Privacy|SMP Invite Privacy";
                    endif;
                        
                    // HY_SETTINGS_LOBBY
                    if(true);
                        &valid_keys[54]      = "PLAYER_VISIBILITY";
                        &valid_vals[54]      = "BOOLEAN";
                        &valid_guis[54]      = "HY_SETTINGS_LOBBY";
                        &valid_slots[54]     = "29|38";
                        &valid_items[54]     = "clock|dye";
                        &valid_names[54]     = "Player Visibility|Player Visibility";
                        
                        &valid_keys[55]      = "PET_VISIBILITY";
                        &valid_vals[55]      = "BOOLEAN";
                        &valid_guis[55]      = "HY_SETTINGS_LOBBY";
                        &valid_slots[55]     = "30|39";
                        &valid_items[55]     = "bone|dye";
                        &valid_names[55]     = "Pet Visibility|Pet Visibility";
                        
                        &valid_keys[56]      = "AUTO_SPAWN_PET";
                        &valid_vals[56]      = "BOOLEAN";
                        &valid_guis[56]      = "HY_SETTINGS_LOBBY";
                        &valid_slots[56]     = "31|40";
                        &valid_items[56]     = "spawn_egg|dye";
                        &valid_names[56]     = "Auto Spawn Pet|Auto Spawn Pet";
                        
                        &valid_keys[57]      = "LOBBY_DARK_MODE";
                        &valid_vals[57]      = "BOOLEAN";
                        &valid_guis[57]      = "HY_SETTINGS_LOBBY";
                        &valid_slots[57]     = "32|41";
                        &valid_items[57]     = "netherbrick|dye";
                        &valid_names[57]     = "Lobby Dark Mode|Lobby Dark Mode";
                        
                        &valid_keys[58]      = "AUTO_DENY_GIFTS";
                        &valid_vals[58]      = "BOOLEAN";
                        &valid_guis[58]      = "HY_SETTINGS_LOBBY";
                        &valid_slots[58]     = "33|42";
                        &valid_items[58]     = "beacon|dye";
                        &valid_names[58]     = "Auto Deny Gifts|Auto Deny Gifts";
                    endif;
                        
                    // HY_SETTINGS_API
                    if(true);
                        &valid_keys[59]      = "API_ONLINE_STATUS";
                        &valid_vals[59]      = "BOOLEAN";
                        &valid_guis[59]      = "HY_SETTINGS_API";
                        &valid_slots[59]     = "29|38";
                        &valid_items[59]     = "gold_ingot|dye";
                        &valid_names[59]     = "Online Status|Online Status";
                        
                        &valid_keys[60]      = "API_RECENT_GAMES";
                        &valid_vals[60]      = "BOOLEAN";
                        &valid_guis[60]      = "HY_SETTINGS_API";
                        &valid_slots[60]     = "31|40";
                        &valid_items[60]     = "book|dye";
                        &valid_names[60]     = "Recent Games|Recent Games";
                        
                        &valid_keys[61]      = "API_WINSTREAKS";
                        &valid_vals[61]      = "BOOLEAN";
                        &valid_guis[61]      = "HY_SETTINGS_API";
                        &valid_slots[61]     = "33|42";
                        &valid_items[61]     = "writable_book|dye";
                        &valid_names[61]     = "Winstreaks|Winstreaks";
                    endif;
                        
                    // HY_SETTINGS_GUILD
                    if(true);
                        &valid_keys[62]      = "GUILD_CHAT_VISIBILITY";
                        &valid_vals[62]      = "BOOLEAN";
                        &valid_guis[62]      = "HY_SETTINGS_GUILD";
                        &valid_slots[62]     = "30|39";
                        &valid_items[62]     = "paper|dye";
                        &valid_names[62]     = "Guild Chat Visibility|Guild Chat Visibility";
                        
                        &valid_keys[63]      = "GUILD_NOTIFICATIONS";
                        &valid_vals[63]      = "BOOLEAN";
                        &valid_guis[63]      = "HY_SETTINGS_GUILD";
                        &valid_slots[63]     = "31|40";
                        &valid_items[63]     = "wooden_door|dye";
                        &valid_names[63]     = "Guild Notifications|Guild Notifications";
                        
                        &valid_keys[64]      = "GUILD_ONLINE_ONLY";
                        &valid_vals[64]      = "BOOLEAN";
                        &valid_guis[64]      = "HY_SETTINGS_GUILD";
                        &valid_slots[64]     = "32|41";
                        &valid_items[64]     = "clock|dye";
                        &valid_names[64]     = "Guild Online Only|Guild Online Only";
                    endif;
                endif;
            endif;
            
            // Iterate over each of the Keys in the &setting_keys[] Array and change all of them.
            if(true);
                #total_keys   = arraysize(&setting_keys[]);
                &string_arrow = char("10144");
                foreach(&setting_keys[],&setting_key,#sk);
                    #key_index = indexof(&valid_keys[],,%&setting_key%);
                    if(%#key_index% != -1);
                        &setting_val    = %&setting_vals[%#sk%]%;
                        &valid_val      = %&valid_vals[%#key_index%]%;
                        boolean_setting = %&valid_val% == "BOOLEAN";
                        string_setting  = !%boolean_setting%;
                        valid_setting   = %boolean_setting%;
                        if(%&valid_val% == "BOOLEAN");
                            desired_state  = lcase(%&setting_val%);
                            &desired_state = %desired_state%;
                            &update_type   = "BOOLEAN";
                        elseifmatches(%&valid_val%,"^STRING\[(.+)\]$",&valid_string_vals,1);
                            string_setting           = true;
                            &valid_string_vals[]     = split(", ",%&valid_string_vals%);
                            #valid_string_vals_index = indexof(&valid_string_vals[],,%&setting_val%);
                            if(%#valid_string_vals_index% != -1);
                                valid_setting  = true;
                                &desired_state = %&valid_string_vals[%#valid_string_vals_index%]%;
                                &update_type   = "STRING";
                            endif;
                        endif;
                        
                        if(%valid_setting%);
                            #exist_index = indexof(&update_keys[],,%&setting_key%);
                            if(%#exist_index% == -1);
                                &update_guis[]           = %&valid_guis[%#key_index%]%;
                                &update_keys[]           = %&setting_key%;
                                &update_vals[]           = %&desired_state%;
                                &update_type[]           = %&update_type%;
                                #update_index[]          = %#key_index%;
                                #update_original_index[] = %#sk%;
                            else;
                                debug_error(%debug%,%&script_debug_name%,"&&setting_key='&e%&setting_key%&7' has been referenced multiple times, making it invalid!");
                            endif;
                        else;
                            debug_error(%debug%,%&script_debug_name%,"&&setting_key='&e%&setting_key%&7' only accepts values &&valid_string_vals='&e%&valid_string_vals%&7', making &&setting_val='&e%&setting_val%&7' invalid.");
                        endif;
                    else;
                        debug_error(%debug%,%&script_debug_name%,"&&setting_key='&e%&setting_key%&7' is an unknown setting key");
                    endif;
                    return_array[%#sk%] = false;
                next;
                
                #update_guis = arraysize(&update_guis[]);
                if(%#update_guis% >= 1);
                    sort("ASC",&update_guis[],&update_keys[],&update_vals[],&update_type[],#update_index[],#update_original_index[]);
                    foreach(&update_guis[],&update_gui,#ug);
                        &setting_key      = %&update_keys[%#ug%]%;
                        &desired_state    = %&update_vals[%#ug%]%;
                        &update_type      = %&update_type[%#ug%]%;
                        #key_index        = %#update_index[%#ug%]%;
                        #sk               = %#update_original_index[%#ug%]%;
                        setting_validated = false;
                        
                        &vars[] = split(" ","#ug &update_gui &setting_key &desired_state &update_type #key_index #sk");
                        foreach(&vars[],&var,#v);
                            &val    = "%%&var%%";
                            &logvar = regexreplace(&var,"(?<!&)(&[\w])","&$1");
                            &logval = regexreplace(&val,"(?<!&)(&[\w])","&$1");
                            debug_log(%debug%,%&script_debug_name%,"%#v% > %&logvar%: '&d%&logval%&7'.");
                        next;
                        if(%debug%); log(" "); endif;
                        
                        
                        if(%&update_type% == "BOOLEAN");
                            desired_state := %&desired_state%;
                        endif;
                        
                        // Update and/or verify the State of this Setting.
                        if(true);
                            error_encountered = false;
                            #setting_slots[]  = split("|",%&valid_slots[%#key_index%]%);
                            &setting_items[]  = split("|",%&valid_items[%#key_index%]%);
                            &setting_names[]  = split("|",%&valid_names[%#key_index%]%);
                            #setting_slots_sz = arraysize(#setting_slots[]);
                            #dye_index        = indexof(&setting_items[],,"dye");
                            debug_log(%debug%,%&script_debug_name%,"attempting to update &&setting_key='&e%&setting_key%&7' to state &&desired_state='&e%&desired_state%&7'...");
                            do;
                                #recursive_timeout = getNewTimeoutSec(%#start_time%,%#timeout_sec%,%do_timeout%);
                                in_valid_gui       = remoteGUI(%&update_gui%,%#tick_wait%,%#recursive_timeout%);
                                if(%in_valid_gui%);
                                    
                                    // If we are editing a BOOLEAN Setting, and there is a 'dye' in the &setting_items[] Array, we can grab that
                                    // Item's Data Value in the Container to determine whether the current State of this Setting matches the desired
                                    // state.
                                    //
                                    // If we are not editing a BOOLEAN Setting, then we should find what matches /<string_arrow>\s*?(.*?)\"/ expression
                                    // against the NBT of the Dye Item.
                                    
                                    if(%#dye_index% != -1);
                                        do_click   = false;
                                        #dye_slot  = %#setting_slots[%#dye_index%]%;
                                        if(%#dye_index% == 0);
                                            #click_slot = %#setting_slots[1]%;
                                        else;
                                            #click_slot = %#setting_slots[0]%;
                                        endif;
                                        &dye_item          = getslotitemnbt(%#dye_slot%,,#dye_stack,#dye_data,&dye_nbt);
                                        &click_item        = getslotitemnbt(%#click_slot%,,#click_stack,#click_data,&click_nbt);
                                        &encoded_click_nbt = encode(%&click_nbt%);
                                        
                                        if(%&dye_item% == "dye");
                                            if(%boolean_setting%);
                                                current_state     = %#dye_data% == 10; // lime dye = 'enabled', grey dye = 'disabled'.
                                                do_click          = %current_state% != %desired_state%;
                                                setting_validated = %current_state% == %desired_state%;
                                            elseif(%string_setting%);
                                                &dye_nbt = strip(%&dye_nbt%);
                                                ifmatches(%&dye_nbt%,"%&string_arrow%\s*?\b(.*?)\"");
                                                    match(%&dye_nbt%,"%&string_arrow%\s*?\b(.*?)\"",{&found_state});
                                                    &found_state = ucase(%&found_state%);
                                                    if(%&found_state% == %&desired_state%);
                                                        setting_validated = true;
                                                    else;
                                                        do_click = true;
                                                    endif;
                                                endif;
                                            else;
                                                &failure_reason   = "somehow setting was not a boolean_setting='&e%boolean_setting%&7' and also not a string_setting='&e%string_setting%&7'."
                                                error_encountered = true;
                                            endif;
                                            
                                            if(%do_click%);
                                                item_is_item_again = false;
                                                item_clicked       = false;
                                                new_gui            = false;
                                                &init_container    = getContainerString();
                                                do;
                                                    // 1. Check if we have exited the GUI.
                                                    new_gui = enteredNewGUI(%&init_container%,false);
                                                    if((%new_gui%) || (%GUI% != "GUICHEST"));
                                                        error_encountered = true;
                                                        &failure_reason   = "Function changed GUIs while attempting to update the Setting"
                                                        debug_error(%debug%,%&script_debug_name%,"GUI Updated!");
                                                        break;
                                                    endif;
                                                    
                                                    // 2. Click the Item, or check to see whether or not the Item is an Item again.
                                                    if(true);
                                                        &updated_item        = getslotitemnbt(%#click_slot%,,#updated_stack,#updated_data,&updated_nbt);
                                                        &encoded_updated_nbt = encode(%&updated_nbt%);
                                                        item_is_item_again   = ((%item_clicked%) && (%&click_item% == %&updated_item%) && (%&encoded_updated_nbt% != %&encoded_click_nbt%));
                                                        if(!%item_clicked%);
                                                            slotclick(%#click_slot%);
                                                            item_clicked = true;
                                                        endif;
                                                    endif;
                                                    
                                                    // 2. Check for Function Timeout
                                                    if(%do_timeout%);
                                                        func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
                                                        if(%func_timeout%);
                                                            error_encountered = true;
                                                            &failure_reason   = "Function timed out while attempting to update the Setting";
                                                            debug_error(%debug%,%&script_debug_name%,"Function Timed Out!");
                                                            break;
                                                        endif;
                                                    endif;
                                                    
                                                    wait("1t");
                                                until((%item_is_item_again%) || (%new_gui%) || (%func_timeout%));
                                            endif;
                                        else;
                                            inc(#not_dye_ticks);
                                            if(%#not_dye_ticks% >= 20);
                                                &failure_reason   = "could not validate that the dye item at #dye_slot=&e%#dye_slot%&7 was in fact a dye item for >= 1 second";
                                                error_encountered = true;
                                            endif;
                                        endif;
                                    else;
                                        &failure_reason   = "could not find a dye item in &&valid_slots[%#key_index%]='&e%&valid_slots[%#key_index%]%&7', &&valid_items[%#key_index%]='&e%&valid_items[%#key_index%]%'&7, &&valid_names[%#key_index%]='&e%&valid_names[%#key_index%]%&7'!";
                                        error_encountered = true;
                                    endif;
                                else;
                                    &failure_reason   = "&bremoteGUI&7 failed to get us into the correct GUI to update the Setting!";
                                    error_encountered = true;
                                endif;
                                
                                if((!%error_encountered%) && (!%setting_validated%));
                                    if(%do_timeout%);
                                        func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
                                        if(%func_timeout%);
                                            error_encountered = true;
                                            &failure_reason   = "Function timed out while attempting to update the Setting";
                                            debug_error(%debug%,%&script_debug_name%,"Function Timed Out!");
                                            break;
                                        endif;
                                    endif;
                                    wait("1t");
                                endif;
                            until((%error_encountered%) || (%setting_validated%));
                        endif;
                    
                        // Log Outcome of changing this Setting
                        if(true);
                            #sk_num = %#sk% + 1;
                            if(%setting_validated%);
                                debug_log(%debug%,%&script_debug_name%,"[%#sk_num%/%#total_keys%]: &&setting_key='&e%&setting_key%&7' was validated to be &&desired_state='&e%&desired_state%&7'.");
                            else;
                                debug_error(%debug%,%&script_debug_name%,"[%#sk_num%/%#total_keys%]: &&setting_key='&e%&setting_key%&7' could not be updated to &&desired_state='&e%&desired_state%&7': %&failure_reason%");
                            endif;
                        endif;
                        
                        return_array[%#sk%] = %setting_validated%;
                        if(!%func_timeout%);
                            func_timeout = hasTimeExceeded(%#start_time%,%#timeout_sec%,%do_timeout%);
                            if(%func_timeout%);
                                debug_error(%debug%,%&script_debug_name%,"Function Timed Out!");
                                break;
                            endif;
                        else;
                            break;
                        endif;
                    next;
                endif;
            endif;
            
            return(return_array[]);
        endfunction;
    // misc/settings/hypixelChangeSettings
        // Wrapper that calls `hypixelChangeSettingsArr()` with the <KEY>: <VALUE> pairs provided to the Function.
            // Params:
                // {number} [#timeout_sec=30]    Max amount of Seconds Function can run for before timing out.
                // {number} [#tick_wait=20]      Tick delay to wait for before repeating the same Action.
                // {string} [...&key_pairs[]]    KEY: VALUE pairs of Settings and the Values to change them to. Valid Settings
                //                               can be found in the docs for `hypixelChangeSettingsArr()`.
            // Returns Boolean(s) for each of the key pairs provided in the [...&key_pairs[]] Array. If only one Key Pair is
            // present, a single Boolean will be returned. If many Key Pairs are present, an Array of Booleans will be returned.
            // Example:
                //    setting_changed = hypixelChangeSettings(%#timeout_sec%,%#tick_wait%,"PLAYER_LIST_INFO: TRUE");
        function hypixelChangeSettings(#timeout_sec=30,#tick_wait=20,...&key_pairs[]);
            // File: G:/G_DRIVE_CODE/mkbFunctionExporterNew/mkbSource/misc/settings.txt:1327
            foreach(&key_pairs[],&key_pair,#kp);
                ifmatches(%&key_pair%,"^(.+?):\s*?(.+)$");
                    match(%&key_pair%,"^(.+?):\s*?(.+)$",{&key,&val});
                    &keys[] = %&key%;
                    &vals[] = %&val%;
                endif;
            next;
            
            #keys_sz = arraysize(&keys[]);
            if(%#keys_sz% >= 1);
                return_array   = %#keys_sz% > 1;
                output_bools[] = hypixelChangeSettingsArr(&keys[],&vals[],%#timeout_sec%,%#tick_wait%);
                if(%return_array%);
                    return(output_bools[]);
                endif;
            endif;
            return(%output_bools[0]%);
        endfunction;
//! @mkb-import-end